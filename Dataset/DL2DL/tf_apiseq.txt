
value error value error in it from arg s ops name scope gen resource variable ops mute x id get device or co location ops add to collections ops name scope push critical section stack gen resource variable ops mute x lock ops control dependencies set ops control dependencies add control dependencies to lock object identity object identity set any be handle value error check multiple access to resources identity nest flatten ops control dependencies ops co locate with gen resource variable ops consume mute x lock nest pack sequence as control flow ops tuple nest flatten ops control dependencies nest map structure execution signature list ops add to collections set all arg s update dic t all arg s dic t pop all arg s dic t pop all arg s dic t pop all arg s dic t pop control flow ops group lock op add control input is instance x op get at tr x op get at tr handle op get at tr get co location get co location ops get collection be handle capture resources intersection value error list
as str or none as int or none as int or none as device str or none as int or none components to string hash cls cls string to components from string class get combine properties dic t in it k war gs update class string to components cache get x split spec split len value error int value error int value error components to string cache get output append output append str output append str str output append join is instance
value error tape push new tape tape push tape value error tape pop tape nest flatten py wrap utils is tensor py wrap utils is variable value error format type back prop util is trainable log log first n has at tr tape watch variable tape watch runtime error runtime error log log first n nest flatten back prop util is trainable log v log resource variable ops be resource variable ops convert to tensor flat target append nest flatten handle or back prop util is trainable log v log ops convert to tensor nest flatten imperative grad imperative grad nest pack sequence as nest flatten array ops shape array ops reshape array ops gather gradient int array ops shape p for ops p for six re raise value error str runtime error p for ops for loop len enumerate array ops c on cat array ops shape array ops reshape out set shape target static shape concatenate nest pack sequence as tensor shape dimension target shape with rank at least source shape with rank at least dim be compatible with value error int array ops shape array ops size array ops shape ops control dependencies check ops assert equal array ops reshape array ops gather gradient p for ops p for six re raise value error str runtime error p for ops for loop array ops c on cat array ops zero array ops reshape array ops transpose array ops reshape
lock util group lock versions pb 2 version def c api set require shape inference fn s list new append new sort runtime error has at tr runtime error max c api t f graph versions c api t f get buffer version def parse from string as bytes value error graph def library function extend graph def library gradient extend c api t f graph to graph def c api t f get buffer graph parse from string as bytes graph clearfield node at tr output shapes list shape extend zip tensor shape tensor shape fun c graph get operation by name len node at tr output shapes list shape extend as graph def as str function get as str value error c api t f graph copy function functions comp at as str name as str enumerate is instance type error create op internal name from scope name unique name node def set control dependencies for input operation create op helper operation create op helper op get at tr callable value is instance type type error op set at tr op set at tr at tr value pb 2 at tr value as bytes gradient function map get op set at tr at tr value pb 2 at tr value as bytes record op see by control dependencies apply device function all co location group extend op set device sort set op set at tr at tr value pb 2 at tr value at tr value pb 2 at tr value list value op get at tr op set at tr at tr value pb 2 at tr value as bytes create op from operation c api util new operations control dependencies for input op add control input as graph element lock as graph element lock value error as graph element is instance as str name split int value error re pr key error re pr re pr key error re pr re pr len value error re pr key error re pr re pr re pr value error is instance value error is instance value error type error type list list is instance type error type as graph element c api t f operation name get operation by name unsafe is instance type error type as graph element get operation by operation c api t f graph get op def as bytes c api t f get buffer op def parse from string as bytes default graph stack get controller list collections name append is instance set add to collection collections get collections get list re compile regex match c append is instance has at tr is instance as str valid scope name regex match value error valid op name regex match value error name from scope name unique name name in use get co locate with control flow context enter gradient co location control flow context exit gradient co location value error op to co locate with co location stack push obj user device spec device function stack push obj add device to stack runtime error device spec string merge op set device from string graph set control flow context graph push control dependencies controller graph pop control dependencies controller graph set control flow context is instance see nod add is instance control dependencies stack append ret add controller op in group ret extend controller add op control dependencies controller is instance has at tr has at tr as graph element is instance is instance type error control ops append current add control dependencies controller is instance type error is instance is instance type callable type error is instance type error is instance is instance type error is instance type error is instance is instance type error un feed able tensors add un fetch able ops add is instance has at tr list reverse snapshot append has at tr has at tr has at tr has at tr has at tr d types as d type group lock group group lock group
tensor shape tensor shape tensor util constant value as shape indexed slices indices shape merge with tensor shape tensor shape dense shape merge with tensor util constant value as shape indexed slices spec tensor shape tensor shape indexed slices spec
property tensor shape as shape d types as d type d types as d type d types as d type tensor shape as shape indices shape concatenate tensor spec tensor spec tensor spec tensor spec specs append tensor spec tensor spec tuple all is instance len indexed slices value indexed slices value indexed slices
frozen set camel to snake type valid identifier value error ops name scope ops name scope ops name scope ops name scope tuple flatten tuple flatten tuple flatten flatten module method decorator make decorator
is instance value error valid op name regex match value error type type error is instance type error is instance type error is instance type error all x be compatible with zip type error is instance is instance type error control input ops append g get op def c api t f operation op type graph get op def reconstruct sequence input create c op as str c api t f operation num outputs range c api util output c api t f operation output type tensor create with output output append graph add op control flow post process control flow util check input from valid context control flow context add op len group input append group input append len as bytes get at tr class name starts with tuple c api t f operation name c api t f operation device c api t f operation num outputs c api t f operation output type output x range is instance set device from string as str device string c api set requested device is instance type error assert same graph c api update edge input is instance type error assert same graph c api add while input hack is instance type error c api add control input is instance type error c api add control input c api remove all control inputs len len len range len tensor output append t set shape str tuple map c api get operation inputs c api t f operation num inputs d types as d type c api t f operation input type input x range c api t f operation get control inputs wrapper graph get operation by name unsafe c api t f operation name c api t f operation get control outputs wrapper graph get operation by name unsafe c api t f operation name c api t f operation op type c api t f operation to node def c api t f get buffer node def parse from string as bytes graph get op def c api t f new buffer from string as bytes set at tr with bu f c api t f delete buffer c api set at tr at tr value pb 2 name at tr list set at tr at tr value pb 2 at tr value at tr value pb 2 name at tr list at tr value pb 2 at tr value list value set at tr at tr value pb 2 at tr value is instance at tr value pb 2 at tr value list value set at tr at tr value pb 2 at tr value at tr value pb 2 at tr value list value set at tr at tr value pb 2 at tr value c api clear at tr c api t f operation get at tr value proto c api t f get buffer value error str x parse from string x which one of get at tr d types as d type list get at tr d types as d type str get at tr c api t f operation get at tr type value error str c api t f operation get at tr boo l value error str c api t f operation get at tr int value error str run use default session
tensor spec tensor spec optional i mpl optional spec
value error is instance type error is instance type error value error row split shape assert have rank value shape with rank at least row split set shape is instance is instance type error type error is instance type error type error is instance type error ops name scope cls convert value and row partition tensor util constant value array ops c on cat ops convert to tensor ops convert to tensor tensor util constant value value error tensor util constant value value error value row ids shape assert have rank n rows shape assert have rank value shape 1 assert be compatible with n rows n rows check ops assert rank check ops assert rank check ops assert equal check ops assert non negative assert monotonic increase check ops assert less is instance check append check ops assert rank at least control flow ops with dependencies math ops cast math ops cast math ops bin count array ops c on cat math ops cum sum row lengths set shape row split set shape cls is instance type error is instance value error is instance cls ops name scope cls convert value and row partition row split shape assert have rank n rows check ops assert rank assert zero assert monotonic increase check ops assert equal is instance check append check ops assert rank at least control flow ops with dependencies cls is instance type error ops name scope cls convert value and row partition row lengths shape assert have rank math ops reduce sum n rows check ops assert rank check ops assert non negative check ops assert equal is instance check append check ops assert rank at least control flow ops with dependencies math ops cum sum array ops c on cat cls is instance type error ops name scope cls convert value and row partition row start shape assert have rank n rows check ops assert rank assert zero assert monotonic increase check ops assert less equal is instance check append check ops assert rank at least control flow ops with dependencies array ops c on cat cls is instance type error ops name scope cls convert value and row partition row limit shape assert have rank n rows check ops assert rank check ops assert non negative assert monotonic increase check ops assert equal is instance check append check ops assert rank at least control flow ops with dependencies array ops zero array ops c on cat cls is instance type error ops name scope cls convert value and row partition uniform row length shape assert have rank tensor shape dimension at index constant op constant is instance value n rows array ops shape tensor util constant value control flow ops cond math ops equal constant op constant ops convert to tensor tensor util constant value range constant op constant math ops range check append check ops assert equal value error check append check ops assert rank tensor util constant value check append check ops assert greater equal constant op constant value error control flow ops with dependencies cls is instance type error is instance type error len is instance type error len len value error ops name scope list list reverse list zip cls from value row ids is instance type error is instance type error ops name scope list reverse cls from row split is instance type error is instance type error ops name scope list reverse cls from row lengths is instance is instance value error value error math ops cast value with row split d type ops convert to tensor ops convert to tensor is instance ops convert to tensor ops convert to tensor value error tensor shape dimension at index tensor util constant value tensor shape tensor shape is instance is instance is instance rt nest split append tuple ops name scope segment id ops row split to segment ids ops name scope is instance rt nest ids append tuple d types as d type math ops cast ops name scope array ops shape ops name scope ops name scope ops name scope rag util get positive axis is instance with value value row lengths array ops shape with value array ops ones ops name scope is instance rt nest row lengths append tuple d types as d type ops name scope is instance array ops shape math ops maximum math ops reduce max array ops shape array ops shape array ops stack math ops maximum math ops reduce max array ops c on cat array ops gather new value shape with rank at least value shape 1 assert be compatible with is instance value error new value with row split d type with row split d type ragged tensor is instance with value with value value with flat value d types as d type value error math ops cast is instance value with row split d type math ops cast math ops cast math ops cast math ops cast ragged tensor rag util get positive axis rag util get positive axis value error merge dim d types as d type value error is instance type error value error ops name scope ops convert to tensor tensor shape with rank at least array ops shape is instance len is instance len value error tensor shape with rank at least len math ops reduce sum array ops ones cls from nest row lengths rag mask to tensor array ops boolean mask cls from nest row lengths np cum prod constant op constant array ops c on cat math ops cum prod array ops reshape cls from tensor range tensor shape dimension at index constant op constant ragged tensor from uniform row length ops convert to tensor pad shape assert be compatible with math ops equal array ops rank math ops range control flow ops cond math ops reduce all have default set shape tensor shape tensor shape have default set shape math ops logical not math ops cast array ops expand dim math ops range math ops reduce max rag util convert to int tensor lengths shape assert have rank math ops minimum math ops maximum math ops cum sum array ops c on cat array ops zero array ops sequence mask array ops boolean mask cls from row split array ops c on cat array ops reshape tensor shape dimension at index tensor shape dimension at index constant op constant constant op constant ragged tensor from uniform row length ops name scope ops convert to tensor get row partition type tensor pair array ops zero shape as tensor gen rag conversion ops rag tensor to tensor d types as d type sparse tensor be sparse type error type ops name scope sparse tensor convert to tensor or sparse tensor value error ops control dependencies assert sparse indices be rag right math ops cast math ops cast cls from value row ids ops name scope gen rag conversion ops rag tensor to sparse sparse tensor sparse tensor ops convert to tensor value error ops name scope gen rag conversion ops rag tensor from variant cls from nest row split ops name scope gen rag conversion ops rag tensor to variant value error reverse rag tensor value ragged tensor value is instance is instance is instance is instance ragged tensor spec ragged tensor spec
tensor shape as shape d types as d type d types as d type value error is instance type error value error tensor spec tensor spec tensor shape tensor shape tensor shape dimension at index tensor spec tensor spec tensor spec tensor spec tensor spec tensor spec range be rag list all is instance reverse rag tensor value ragged tensor value is instance ops convert to tensor reverse ragged tensor tensor spec tensor spec is instance value error gen rag conversion ops rag tensor to variant value to variant is instance value error value error value to variant value error ragged tensor from variant is instance tensor shape dimension value result row split set shape result flat value set shape tensor shape tensor shape result set shape ragged tensor spec tensor shape tensor shape ragged tensor spec cls
is instance type error gradient registry register
property tensor shape as shape d types as d type tensor spec tensor spec tensor spec tensor spec tensor spec tensor spec is instance sparse tensor from value all is instance sparse tensor value sparse tensor tensor spec tensor spec sparse tensor from value gen sparse ops serialize sparse tensor util constant value as shape shape merge with value error gen sparse ops serialize many sparse gen sparse ops de serialize sparse indices set shape ops convert to tensor any array ops un stack enumerate constant op constant array ops stack dense shape set shape sparse tensor sparse tensor spec tensor shape tensor shape value error sparse tensor spec is instance cls is instance is instance cls cls from value sparse tensor from value type error
is instance type error d types as d type tensor value error c api t f graph get tensor shape helper tensor shape tensor shape log warn value error errors operator not allowed in graph error format errors operator not allowed in graph error format errors operator not allowed in graph error format disallow when autograph disable disallow when autograph enable disallow in graph mode disallow when autograph disable disallow when autograph enable disallow in graph mode type error type error type error x range tuple is instance tensor shape tensor shape dim list append dim list append c api t f graph set tensor shape wrapper value error str c api t f operation output consumers wrapper graph get operation by name unsafe value error c api util output get at tr type error id cls new result dic t update not implemented error format type error format override helper e val use default session object identity reference
control flow util enable control flow v 2 implementation weak ref ref implementation grad implementation read implementation write implementation stack implementation gather implementation c on cat implementation un stack implementation scatter implementation split implementation size implementation close
property tensor shape as shape d types as d type is instance type spec type spec from value is instance d type be compatible with element shape be compatible with be compatible with value error tensor array spec element shape most specific compatible shape tensor spec tensor spec is instance type error format type ops name scope list ops tensor list from tensor tensor array is instance type error format type tensor array spec tensor shape tensor shape
is instance as dimension is instance it er as dimension as dimension join str join str len value error len value error it er it er is instance tensor shape is instance value error unknown shape dimension as shape assert same rank enumerate new dim append dim merge with tensor shape value error is instance tensor shape concatenate is instance tensor shape other concatenate as shape tensor shape as shape value error value error merge with unknown shape value error value error value error as shape zip x dim be compatible with be compatible with value error as shape dimension enumerate zip tensor shape all value error value error tensor shape pb 2 tensor shape proto tensor shape pb 2 tensor shape proto tensor shape pb 2 tensor shape proto dim as shape as shape value error concatenate
super is instance tensor spec is instance tensor spec value error property ops convert to tensor value error value shape be compatible with value error len tensor list 0 set shape shape merge with value error to components tensor spec tensor shape tensor shape value error tensor spec
not implemented error type is instance type spec from value type type be compatible type type value error most specific compatible type serialization de serialize not implemented error type not implemented error type not implemented error type nest flatten to components check tensor list from compatible tensor list from components nest pack sequence as nest flatten not implemented error type cls type type hash type type not implemented error type not implemented error type type spec from value len len value error enumerate zip s 1 be compatible with value error type make cmp key is instance is instance is instance tuple tuple make cmp key make cmp key sort is instance tuple make cmp key is instance tuple make cmp key is instance tuple is instance type spec nest list to tuple value error type type is instance tuple type spec nest list to tuple type type is instance len len all type spec be compatible zip is instance len len sort sort all type spec be compatible is instance a be compatible with type type value error is instance len len value error tuple type spec most specific compatible type serialization zip is instance sort sort len len value error type spec most specific compatible type serialization is instance a most specific compatible shape is instance assertion error is instance a most specific compatible type value error

six with meta class control flow ops cond be variable initialize assign value error session run d type be compatible with value error cls overload operator set at tr get at tr tensor oper fun c tools update wrapper set at tr type error id gen math ops equal gen math ops not equal type error name self name index name index ref variable object identity reference is instance ops prep end name scope join join zip full name starts with ops strip name scope save slice info def full shape append save slice info def var offset append save slice info def var shape append
hash is instance int int

framework ops name scope sort or arg sort
is instance np array batch to space nd
py wrap tensor flow t fe py fast path execute bit cast eager fallback dispatch dispatch ops raise from not ok status execute make type op def library apply op helper dispatch dispatch op get at tr type op get at tr type execute record gradient
boolean mask
gen array ops broadcast arg s
common shape broadcast shape
py wrap tensor flow t fe py fast path execute broadcast to eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type execute record gradient
case helper
d types as d type is instance ops name scope is instance cast sparse tensor sparse tensor is instance cast ops indexed slices ops convert to tensor gen math ops cast log warn
is instance is instance type error list global norm ops name scope math ops minimum constant op constant array ops where math ops be finite constant op constant float ops convert to tensor is instance enumerate enumerate value clip append ops co locate with value clip append array ops identity ops indexed slices is instance zip
ops name scope ops convert to tensor is instance math ops reduce sum array ops where array ops ones like array ops where math ops sqr t value shape merge with array ops identity math ops maximum is instance ops indexed slices
ops name scope ops convert to tensor is instance math ops minimum value shape merge with math ops maximum value shape merge with is instance ops indexed slices
is instance len ops name scope ops convert to tensor identity gen array ops c on cat
cond
constant i mpl
np is scalar is instance type error type d types as d type constant op constant
callable
convert to tensor
custom gradient eager mode decorator graph mode decorator decorator make decorator decorate
callable runtime error device
py wrap tensor flow t fe py fast path execute dynamic partition eager fallback dispatch dispatch ops raise from not ok status execute make int op def library apply op helper dispatch dispatch op get at tr int op get at tr type execute record gradient
py wrap tensor flow t fe py fast path execute dynamic stitch eager fallback dispatch dispatch ops raise from not ok status is instance type error len is instance type error len value error len op def library apply op helper dispatch dispatch op get at tr int op get at tr type execute record gradient
is instance type error is instance type error gen array ops edit distance
fwd forward compatible ein sum ein sum
is instance tensor shape tensor shape array ops ensure shape

gen array ops expand dim
py wrap tensor flow t fe py fast path execute extract volume patch eager fallback dispatch dispatch ops raise from not ok status is instance type error execute make int is instance type error execute make int execute make str op def library apply op helper dispatch dispatch op get at tr op get at tr op get at tr type op get at tr execute record gradient
lina lg ops i mpl eye
gen array ops fill tensor util maybe set static shape
gen array ops fingerprint
callable type error tensor array ops tensor array ops name scope var scope set cache device ops convert to tensor nest flatten tensor shape dimension value array ops shape nest map structure nest map structure el em read constant op constant constant op constant nest map structure el em read fn control flow ops while loop var scope set cache device
callable type error tensor array ops tensor array ops name scope var scope set cache device ops convert to tensor nest flatten tensor shape dimension value array ops shape nest map structure nest map structure el em read nest map structure el em read fn control flow ops while loop var scope set cache device
function lib validate signature decorator make decorator function decorate
gather
gather nd
log get logger logger set level log stream handler handler set formatter log formatter logger add handler
is instance be tensor is instance constant value tensor graph prevent feed
k war gs get len f decorator make decorator
gradients util gradients helper
k war gs pop value error join ops name scope no op nest flatten has at tr type error type ops on device dev append len group control de ps sort de ps append group control de ps ops control dependencies no op
py wrap tensor flow t fe py fast path execute guarantee const eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type execute record gradient
hessian s
ops name scope gen math ops histogram fix width
ops name scope ops convert to tensor array ops shape array ops reshape ops convert to tensor ops convert to tensor math ops cast math ops true div math ops floor math ops cast clip ops clip by value array ops reshape
is instance nest map structure has at tr ops convert to tensor gen array ops identity has at tr
py wrap tensor flow t fe py fast path execute identity n eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr execute record gradient
name scope control dependencies context manager
is instance ops be dense tensor like get at tr
py wrap tensor flow t fe py fast path execute lin space eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type execute record gradient
file io file exist file io be directory file io list directory os path join be share object py t f load library os error
py t f load library py get python wrappers py t f get op list py t f delete library handle hash lib md 5 imp new module set at tr
np prod d types as d type np from buffer list len value extend np array np from it er np from it er np from it er np from it er np from it er it er np array complex zip it er np array complex zip np from it er type error np zero np pad value reshape
value error is instance d types as d type be array like np as array is instance value as type value error np prod np empty assert compatible np array list get dense dimensions value error list get dense dimensions np array as type np array as type np array equal d types as d type type error has at tr type error int np prod type error tuple tuple type error tuple value error tensor pb 2 tensor proto tensor shape as shape value error is instance flatten to strings as bytes type error type tensor proto string val extend get num py append fn type error append fn
callable type error is instance type error log log first n nest be sequence nest flatten nest pack sequence as nest be sequence nest flatten nest pack sequence as input flatten ops name scope var scope set cache device ops convert to tensor input pack output flatten len value error value error tensor shape dimension value array ops shape tensor array ops tensor array el em ta un stack zip constant op constant tensor array ops tensor array input pack el em ta read fn nest assert same structure output flatten ta write zip control flow ops while loop tensor shape dimension tensor shape dimension value n static merge with tensor shape dimension tensor shape dimension value r set shape tensor shape tensor shape var scope set cache device output pack
k war gs pop k war gs pop list type error format value error ops name scope len enumerate output append reshape stack size ops convert to tensor reshape reshape ones
is instance value error enter eager name scope exit fn s append set at tr exit fn s append exit fn
is instance type error gradient registry register
py wrap tensor flow t fe py fast path execute no op eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch
fn computation get concrete function tensor spec tensor spec str enumerate ops name scope is instance value error re pr gen batch ops batch function list
norm
py fun c common
ops name scope ops convert to tensor ops convert to tensor type error format type error format ops convert to tensor ops convert to tensor type error format gen array ops one hot
d types as d type ops name scope is instance constant if small constant op tensor shape tensor conversion function tensor shape tensor shape ops convert to tensor reshape fill constant
d types as d type value error array ops ones
ones like i mpl
pad
ops name scope ops convert to tensor ops convert to tensor tensor shape tensor shape len output shape concatenate gen array ops parallel c on cat expand dim
k war gs pop k war gs pop k war gs pop k war gs pop k war gs pop value error be file path output stream to constant get value error str len tensor util be tensor is instance nest map structure tensor util be tensor join p print p format generate placeholder string nest flatten is instance tensors extend placeholder s append format tensor util be tensor tensors append placeholder s append placeholder s append is instance p print p format nest pack sequence as templates append sep join template replace string ops string format gen log ops print
internal py fun c
random generator assert float d type random generator random normal
random generator d types as d type value error random generator random uniform
ops name scope ops convert to tensor ops convert to tensor ops convert to tensor all max cast cast cast gen math ops range
rank internal
py wrap tensor flow t fe py fast path execute real div eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type execute record gradient
f t watch t watch ops control dependencies f list t gradient list grads len arg s len grads len arg s len
is instance any is instance type error any is subclass type error callable type error tensor conversion fun c registry priority append
reshape repeat with axis
ops name scope ops convert to tensor ops convert to tensor zero zero ops convert to tensor zero tensor util constant value tensor util constant value tensor util constant value stack range stack range
gen array ops reshape tensor util maybe set static shape
py wrap tensor flow t fe py fast path execute reverse eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type execute record gradient
gen array ops reverse sequence
gen man ip ops roll
callable type error nest be sequence nest flatten nest pack sequence as nest be sequence nest flatten nest pack sequence as input flatten ops name scope var scope set cache device ops convert to tensor tensor shape dimension value array ops shape tensor array ops tensor array el em ta un stack zip el em read output flatten ops convert to tensor tensor array ops tensor array acc ta write zip input pack el em ta read output pack fn nest assert same structure output flatten ta write zip control flow ops while loop tensor shape dimension tensor shape dimension value n static merge with tensor shape dimension tensor shape dimension value r set shape tensor shape tensor shape var scope set cache device output pack
py wrap tensor flow t fe py fast path execute scatter nd eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type execute record gradient
shape internal shape internal reshape reshape gen array ops upper bind gen array ops lower bind value error reshape shape internal
ops name scope ops convert to tensor gen math ops max all dimension gen math ops maximum constant ops convert to tensor value error gen math ops range constant constant gen math ops cast expand dim gen math ops cast
shape
gen array ops shape n
size
gen array ops slice
framework ops name scope sort or arg sort
space to batch nd
py wrap tensor flow t fe py fast path execute space to batch nd eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type op get at tr type execute record gradient
ops convert to tensor is instance gen array ops split value error value error gen array ops split v
squeeze
ops convert to tensor ops convert to tensor len value error gen array ops pack
py wrap tensor flow t fe py fast path execute stop gradient eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type execute record gradient
ones like gen array ops stride slice is instance value error var stride slice assign
index case helper
py wrap tensor flow t fe py fast path execute tensor scatter add eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type execute record gradient
py wrap tensor flow t fe py fast path execute tensor scatter sub eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type execute record gradient
py wrap tensor flow t fe py fast path execute tensor scatter update eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type execute record gradient
is instance len x range len int np prod int np prod list list array ops reshape array ops transpose is instance len x range len ops convert to tensor ops convert to tensor array ops shape array ops shape array ops rank ops convert to tensor array ops where array ops set diff 1 d range array ops gather array ops gather reduce prod reduce prod array ops c on cat array ops stack array ops c on cat array ops stack array ops reshape array ops transpose is instance value error value error list x range list x range array ops rank range range is instance len value error is instance is instance len len value error len len ops convert to tensor ops name scope ops convert to tensor ops convert to tensor tensor dot ax tensor dot reshape tensor dot reshape mat mul is instance is instance array ops reshape ops convert to tensor ops convert to tensor array ops reshape array ops c on cat product set shape
py wrap tensor flow t fe py fast path execute tile eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type execute record gradient
py wrap tensor flow t fe py fast path execute timestamp eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch execute record gradient
transpose
py wrap tensor flow t fe py fast path execute truncate div eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type execute record gradient
py wrap tensor flow t fe py fast path execute truncate mod eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type execute record gradient
tuple
gen array ops unique
gen array ops unique with count
py wrap tensor flow t fe py fast path execute unravel index eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type execute record gradient
ops convert to tensor value error value error gen array ops unpack

nest map structure array ops gather fn ops convert to tensor nest flatten array ops shape p for
ops name scope ops convert to tensor gen array ops where gen math ops select value error
while loop
d types as d type ops name scope is instance constant if small constant op tensor shape tensor conversion function tensor shape tensor shape ops convert to tensor reshape fill constant
d types as d type array ops zero
zero like i mpl
is instance bytes is instance bytes or text encode is instance type error
is instance as str str
is instance is instance bytes or text decode type error
is instance dimension
is instance
update forward compatibility date number date time date
date to date number
has at tr as str any
gen data flow ops resource conditional accumulator resource variable ops eager resource delete r super ops convert to tensor math ops cast ops convert to tensor gen data flow ops resource accumulator apply gradient gen data flow ops resource accumulator take gradient out set shape
tensor shape tensor shape accumulator ref op name split gen data flow ops resource accumulator num accumulate gen data flow ops resource accumulator set global step math ops cast ops convert to tensor
as str or none as int or none as int or none as device str or none as int or none hash components to string string to components get combine properties
is instance int six raise from type error format value error re pr str as dimension as dimension as dimension be compatible with value error as dimension assert be compatible with dimension dimension as dimension dimension dimension as dimension dimension dimension as dimension dimension dimension as dimension dimension dimension as dimension dimension dimension as dimension dimension dimension type error format type type error format type type error format type as dimension dimension dimension as dimension as dimension as dimension as dimension as dimension
gen io ops fix length record reader super

gen io ops identity reader super
config pb 2 gpu options config pb 2 config proto super warn warn super default graph exit default session exit
gen io ops lm db reader super
gen log ops print
runtime error is instance gen io ops reader read gen data flow ops fake queue gen io ops reader read is instance gen io ops reader read up to gen data flow ops fake queue gen io ops reader read up to gen io ops reader num record produce gen io ops reader num record produce gen io ops reader num work units complete gen io ops reader num work units complete gen io ops reader serialize state gen io ops reader serialize state gen io ops reader restore state gen io ops reader restore state gen io ops reader reset gen io ops reader reset
super runtime error log error default session context manager exit default graph context manager exit thread thread close thread join log error as bytes as bytes session t f reset
gen data flow ops sparse conditional accumulator super apply grad math ops cast ops convert to tensor gen data flow ops sparse accumulator apply gradient math ops cast math ops cast gen data flow ops sparse accumulator take gradient gen data flow ops sparse accumulator take gradient ops indexed slices gen data flow ops accumulator num accumulate gen data flow ops accumulator set global step math ops cast ops convert to tensor
python io t f record options get compression type string gen io ops record reader super
gen io ops text line reader super

hash
not implemented error value error not implemented error ops get collection get collection get collection get collection ops name scope callable ops convert to tensor value error var store get variable value error value error full name list append full name list append join ops name scope var store get partition variable
gen io ops whole file reader super
runtime error value error str ops control dependencies array ops check numeric s control flow ops group



py wrap tensor flow t fe py fast path execute arg max eager fallback ops raise from not ok status execute make type op def library apply op helper op get at tr type op get at tr type op get at tr type execute record gradient
py wrap tensor flow t fe py fast path execute arg min eager fallback ops raise from not ok status execute make type op def library apply op helper op get at tr type op get at tr type op get at tr type execute record gradient
gen math ops arg max doc replace deprecation deprecate argument lookup arg max
gen math ops arg min doc replace deprecation deprecate argument lookup arg min
ops name scope binary assert
binary assert
binary assert
ops name scope ops convert to tensor type error control flow ops no op
binary assert
binary assert
ops name scope ops convert to tensor ops convert to tensor np f info ops convert to tensor ops convert to tensor shape and d type str shape and d type str math ops abs math ops abs math ops reduce all math ops less control flow ops assert
ops name scope ops convert to tensor shape and d type str ops convert to tensor assert less
ops name scope ops convert to tensor shape and d type str ops convert to tensor assert less equal
ops name scope ops convert to tensor shape and d type str ops convert to tensor assert less equal
binary assert
ops name scope ops convert to tensor shape and d type str ops convert to tensor assert less
ops name scope tuple ops convert to tensor ops convert to tensor array ops shape assert rank condition value error
ops name scope tuple ops convert to tensor ops convert to tensor array ops shape assert rank condition value error
ops name scope tuple tuple ops convert to tensor tuple ops convert to tensor list array ops shape assert rank condition value error
ops name scope ops convert to tensor value error value error
ops name scope ops convert to tensor type error type error control flow ops no op
var list append ops co locate with rank append array ops rank internal len array ops stack
gen state ops assign ref assign
gen state ops assign add ref assign add
gen state ops assign sub ref assign sub
ops name scope ops convert to tensor ops convert to tensor value error batch gather
ops name scope ops convert to tensor array ops shape value error array ops expand dim range array ops reshape gen math ops range gen math ops cast nd indices list append array ops ones like nd indices list append array ops c on cat scatter nd update
deprecation deprecate argument lookup batch to space nd np array result set shape
py wrap tensor flow t fe py fast path execute batch to space nd eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type op get at tr type op get at tr type execute record gradient
bin count
squeeze where gather ops name scope ops convert to tensor ops convert to tensor value error value error shape tensor axis axis n dims mask assert be compatible with gen math ops prod shape reshape c on cat shape shape tensor set shape tensor shape as shape reshape apply mask 1 d
case helper
ops name scope ops convert to tensor math ops cast array ops size math ops r sqr t math ops reduce sum math ops range array ops rank array ops identity math ops minimum constant op constant
co locate with
util enable control flow v 2 cond cond type error type error type error type error callable type error callable type error ops name scope unpack if singleton is instance type error switch array ops identity array ops identity array ops identity tensor op graph prevent fetch cond context context t build cond branch value error context t exit result cond context context f build cond branch value error context f exit result unpack if singleton unpack if singleton nest assert same structure nest map structure nest map structure nest assert same structure type error format value error format value error nest flatten nest flatten zip is instance is instance value error merge zip convert flow to tensor arrays nest flatten ops add to collection ops add to collection nest pack sequence as unpack if singleton
confusion matrix
constant i mpl

control flow util enable control flow v 2
deprecation deprecate argument lookup convert to tensor
internal convert to tensor or index slice
d types as d type is instance sparse tensor from value is instance d type be compatible with runtime error ops convert to tensor
deprecation deprecate argument lookup deprecation deprecate argument lookup deprecation deprecate argument lookup count nonzero
gen state ops count up to gen state ops resource count up to
len len value error len value error variable scope variable scope variable scope get partition variable list
decode csv
deprecation deprecate argument lookup value error gen parse ops decode raw
tensor handle get device name ops device array ops placeholder gen data flow ops delete session tensor
gen array ops depth to space
callable runtime error context device callable context device combine






div python 2

enable eager execution internal





deprecation deprecate argument lookup value error expand dim
deprecation deprecate argument lookup gen array ops extract image patch
len min
py wrap tensor flow t fe py fast path execute floor div eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch op get at tr type execute record gradient
callable type error tensor array ops tensor array ops name scope var scope set cache device ops convert to tensor nest flatten tensor shape dimension value array ops shape nest map structure nest map structure el em read constant op constant constant op constant nest map structure el em read fn control flow ops while loop var scope set cache device
callable type error tensor array ops tensor array ops name scope var scope set cache device ops convert to tensor nest flatten tensor shape dimension value array ops shape nest map structure nest map structure el em read nest map structure el em read fn control flow ops while loop var scope set cache device
tensor util constant value gen array ops gather params sparse read gen array ops gather
tensor util constant value int params gather nd gen array ops gather nd batch gather nd




get variable
has at tr truncate seed truncate seed truncate seed
is instance type error ops co locate with gen data flow ops get session handle
tensor handle get device name ops device array ops placeholder register handle feeder gen data flow ops get session tensor


ops get collection
control flow ops no op variables initializer
gradients util gradients helper
gradients util as list gradients zip array ops reshape array ops size array ops constant tensor array ops tensor array control flow ops while loop result write gradients array ops shape array ops reshape array ops c on cat hessian s append
table initializer


variables initializer
state ops be variable initialize
py t f load library
ops get collection
control flow ops no op variables initializer
make template internal
callable type error is instance type error log log first n nest be sequence nest flatten nest pack sequence as nest be sequence nest flatten nest pack sequence as input flatten ops name scope var scope set cache device ops convert to tensor input pack output flatten len value error value error tensor shape dimension value array ops shape tensor array ops tensor array el em ta un stack zip constant op constant tensor array ops tensor array input pack el em ta read fn nest assert same structure output flatten ta write zip control flow ops while loop tensor shape dimension tensor shape dimension value n static merge with tensor shape dimension tensor shape dimension value r set shape tensor shape tensor shape var scope set cache device output pack
len value error len max min int math ce il
ops get collection
ops get collection
ops name scope multi no mi al categorical i mpl

deprecation deprecate argument lookup is instance is instance len tuple is instance is instance value error value error is instance value error np is real value error ops name scope ops convert to tensor array ops rank map fn map fn control flow ops cond ops convert to tensor math ops range array ops c on cat array ops set diff 1 d map fn map fn math ops cast array ops squeeze array ops where math ops equal array ops transpose array ops expand dim math ops reduce max math ops abs gen lina lg ops sv d array ops transpose math ops sqr t math ops reduce sum math ops c on j math ops abs math ops reduce sum math ops reduce max math ops reduce sum math ops reduce max math ops pow math ops reduce sum math ops pow array ops squeeze
ones like i mpl
log warn name scope
tensor util be tensor gen array ops pad gen array ops pad gen array ops mirror pad gen array ops mirror pad value error get padding s constant tensor shape tensor shape is instance zip any new shape append new shape append sum result set shape
parse example
parse single example un optimized
runtime error gen array ops placeholder
gen array ops placeholder with default
py fun c common
value error forward compatible gen array ops quant ize gen array ops quant ize
assert float d type d types as d type random ops random normal
random poisson
d types as d type random ops random uniform
deprecation deprecate argument lookup deprecation deprecate argument lookup reduce all
deprecation deprecate argument lookup deprecation deprecate argument lookup reduce any
deprecation deprecate argument lookup deprecation deprecate argument lookup reduce join
deprecation deprecate argument lookup deprecation deprecate argument lookup reduce log sum exp
deprecation deprecate argument lookup deprecation deprecate argument lookup reduce max
deprecation deprecate argument lookup deprecation deprecate argument lookup reduce mean
deprecation deprecate argument lookup deprecation deprecate argument lookup reduce min
deprecation deprecate argument lookup deprecation deprecate argument lookup reduce prod
deprecation deprecate argument lookup deprecation deprecate argument lookup reduce sum
var list append ops name scope state ops be variable initialize os en v iron get ops device array ops constant math ops logical not array ops stack array ops constant array ops boolean mask
assertion error

deprecation deprecate argument lookup deprecation deprecate argument lookup gen array ops reverse sequence
ops convert to tensor is instance ops indexed slices gen math ops mul gen math ops mul value error
callable type error nest be sequence nest flatten nest pack sequence as nest be sequence nest flatten nest pack sequence as input flatten ops name scope var scope set cache device ops convert to tensor tensor shape dimension value array ops shape tensor array ops tensor array el em ta un stack zip el em read output flatten ops convert to tensor tensor array ops tensor array acc ta write zip input pack el em ta read output pack fn nest assert same structure output flatten ta write zip control flow ops while loop tensor shape dimension tensor shape dimension value n static merge with tensor shape dimension tensor shape dimension value r set shape tensor shape tensor shape var scope set cache device output pack
gen state ops scatter add ref lazy read gen resource variable ops resource scatter add ops convert to tensor
gen state ops scatter div ref lazy read gen resource variable ops resource scatter div ops convert to tensor
gen state ops scatter max ref lazy read gen resource variable ops resource scatter max ops convert to tensor
gen state ops scatter min ref lazy read gen resource variable ops resource scatter min ops convert to tensor
gen state ops scatter mul ref lazy read gen resource variable ops resource scatter mul ops convert to tensor
gen state ops scatter nd add ref lazy read gen state ops resource scatter nd add ops convert to tensor
gen state ops scatter nd sub ref lazy read gen state ops resource scatter nd sub ops convert to tensor
gen state ops scatter nd update ref lazy read gen state ops resource scatter nd update ops convert to tensor
gen state ops scatter sub ref lazy read gen resource variable ops resource scatter sub ops convert to tensor
gen state ops scatter update ref lazy read gen resource variable ops resource scatter update ops convert to tensor
serialize many sparse
serialize sparse
context set global seed
gen array ops list diff
shape internal
size internal
deprecation deprecate argument lookup space to batch nd np array result set shape
gen array ops space to depth
deprecation deprecate argument lookup sparse add
deprecation deprecate argument lookup deprecation deprecate argument lookup sparse c on cat
py wrap tensor flow t fe py fast path execute sparse mat mul eager fallback ops raise from not ok status execute make boo l execute make boo l execute make boo l execute make boo l op def library apply op helper op get at tr boo l op get at tr boo l op get at tr boo l op get at tr boo l op get at tr type op get at tr type execute record gradient
sparse merge i mpl
runtime error normalize sparse shape placeholder sparse tensor sparse tensor placeholder placeholder
deprecation deprecate argument lookup gen sparse ops sparse reduce max math ops reduction dims
deprecation deprecate argument lookup gen sparse ops sparse reduce max sparse math ops reduction dims sparse tensor sparse tensor
deprecation deprecate argument lookup gen sparse ops sparse reduce sum math ops reduction dims
deprecation deprecate argument lookup gen sparse ops sparse reduce sum sparse math ops reduction dims sparse tensor sparse tensor
gen math ops sparse segment mean with num segment gen math ops sparse segment mean
gen math ops sparse segment sqr t n with num segment gen math ops sparse segment sqr t n
gen math ops sparse segment sum with num segment gen math ops sparse segment sum
is instance value error value error value error value error deprecation deprecate argument lookup convert to sparse tensor gen sparse ops sparse split range sparse tensors append sparse tensor sparse tensor
gen sparse ops sparse to dense
deprecation deprecate argument lookup np is scalar gen array ops squeeze
ops name scope string ops string split rag tensor ragged tensor from value row ids value error
deprecation deprecate argument lookup gen string ops string to hash bucket
deprecation deprecate argument lookup gen parse ops string to number
subst r
ops get collection control flow ops group control flow ops no op
cast
cast
cast
cast
cast
cast
cast
ops get collection
ops name scope tensor util be tensor ops convert to tensor transpose fn gen math ops range gen array ops rank np a range transpose fn
assert float d type d types as d type random ops truncate normal
ops name scope is instance tensor util be tensor ops convert to tensor is instance is instance is instance type error gate ops append sort set value error group tensor util be tensor tpl append with dependencies is instance ops control dependencies tpl append group tpl append
assert float d type d types as d type float max math sqr t random ops random uniform
value error value error is instance value error value error is instance value error max math floor int math ce il min

log warn variable scope
type error value error ops get graph from input is instance type error format graph context manager exit ops name scope ops name scope is instance type error is instance name or scope name split ops name scope current name scope exit is instance pure variable scope pure variable scope exit pure variable scope pure variable scope exit value error ops name scope current name scope exit get unique variable scope pure variable scope pure variable scope exit cache pure variable scope exit current name scope exit graph context manager exit
control flow ops group control flow ops no op
deprecation deprecate argument lookup deprecation deprecate argument lookup verify tensor all finite
ops name scope ops convert to tensor gen array ops where gen math ops select value error
callable type error callable type error type error util enable control flow v 2 while while loop ops name scope value error len ops convert to tensor value error int constant op constant math ops logical and orig cond orig body math ops logical and orig cond orig body nest map structure list cond body is instance nest assert same structure list is instance ops convert to tensor nest map structure tensor shape tensor shape nest assert same structure nest map structure while context ops add to collection loop context build loop
variable holder wrapped function fun c graph fun c graph from py fun c
zero like i mpl
run
to code
to graph
str attribute error attribute error format super not implemented error iterator ops owned iterator ensure same data set graph traverse obtain all variant tensor ops core random seed get seed core random seed set random seed make data set add to graph str value error six re raise iterator ops iterator gen data set ops one shoot iterator get legacy output type get legacy output shape get legacy output class make initial iz able iterator runtime error ensure same data set graph gen data set ops iterator ops co locate with gen data set ops make iterator iterator ops iterator get legacy output type get legacy output shape get legacy output class nest map structure nest map structure nest map structure structure convert legacy structure data set v 1 adapter data set v 2 from tensors data set v 1 adapter data set v 2 from tensor slice data set v 1 adapter sparse tensor slice data set data set v 1 adapter data set v 2 from generator data set v 1 adapter data set v 2 range data set v 1 adapter data set v 2 zip data set v 1 adapter super data set v 1 adapter super data set v 1 adapter data set v 2 list file data set v 1 adapter super data set v 1 adapter super data set v 1 adapter super data set v 1 adapter super data set v 1 adapter super data set v 1 adapter super data set v 1 adapter super data set v 1 adapter super data set v 1 adapter map data set data set v 1 adapter parallel map data set data set v 1 adapter map data set data set v 1 adapter parallel map data set data set v 1 adapter super data set v 1 adapter super data set v 1 adapter super filter data set data set v 1 adapter super data set v 1 adapter super data set v 1 adapter super data set v 1 adapter super
fixed length record data set v 2 super
value error structure convert legacy structure structure get flat tensor shape structure get flat tensor type gen data set ops iterator to string handle ops add to collection nest map structure nest map structure tensor shape tensor shape nest map structure up to nest map structure nest assert same structure structure convert legacy structure ops device gen data set ops iterator structure get flat tensor type structure get flat tensor shape gen data set ops iterator structure get flat tensor type structure get flat tensor shape iterator nest map structure nest map structure tensor shape tensor shape nest map structure up to nest map structure nest assert same structure structure convert legacy structure ops convert to tensor ops device gen data set ops iterator from string handle structure get flat tensor type structure get flat tensor shape gen data set ops iterator from string handle structure get flat tensor type structure get flat tensor shape iterator value error ops name scope nest map structure nest map structure nest map structure nest assert same structure nest assert same structure zip nest flatten nest flatten type error zip nest flatten nest flatten type error zip nest flatten nest flatten iterator shape be compatible with type error ops co locate with gen data set ops make iterator warn warn gen data set ops iterator get next structure from tensor list gen data set ops iterator to string handle nest map structure nest map structure nest map structure iterator save able
t f record data set v 2 super t f record data set v 1
text linedata set v 2 super
nest map structure get structure
nest map structure get structure
nest map structure get structure
data set make initial iz able iterator data set v 1 adapter
data set v 1 adapter
is instance ops name scope ops convert to tensor shape and d type str has at tr has at tr value error tensor name tuple enumerate value error tensor name tensor dim size append tensor dim sizes dimension size symbolic dimension size len assert rank at least assert rank in assert rank rank assertions append enumerate be symbol for any size len have know value have know value int tensor name have know value have know value int int value error tensor name math ops equal ops convert to tensor ops convert to tensor tensor name array ops shape size assertions append control flow ops assert ops control dependencies control flow ops group
mirrored extended super distribute lib distribution strategy gauge get cell
one device strategy doc replace super one device extended
distribution strategy context in replica thread mode push per thread mode math ops equal constant op constant require replica context merge call push per thread mode distribution strategy context cross replica thread mode merge fn require replica context require replica context strategy extend batch reduce to batch reduce destination merge call all reduce nest pack sequence as grad wrapper nest flatten nest pack sequence as merge call nest flatten nest map structure
extend make data set iterator super extend experimental make num py data set super super extend update config proto
require cross replica or default context extend experimental make num py data set not implemented error require cross replica or default context extend is instance broadcast to not implemented error require cross replica or default context extend experimental run step on iterator not implemented error require cross replica or default context extend call for each replica not implemented error not implemented error not implemented error not implemented error not implemented error not implemented error

dic t ops name scope distribution util get log its and p robs super ops convert to tensor array ops shape array ops constant tensor shape tensor shape array ops c on cat random ops random uniform math ops less math ops cast distribution util embed check integer cast close math ops cast array ops ones like array ops ones like broadcast nn s igm oid cross entropy with log its math ops s igm oid nn soft plus array ops identity math ops cast
dic t ops name scope maybe assert valid concentration ops convert to tensor maybe assert valid concentration ops convert to tensor check ops assert same float d type super dic t zip ops convert to tensor array ops shape constant op constant tensor shape tensor shape array ops ones like array ops ones like random ops random gamma random ops random gamma distribution util gen new seed log un normalized pro b math ops exp log pro b math ops log cd f math ops beta inc maybe assert valid sample math ops x logy math ops log 1 p math ops l gamma math ops l gamma math ops l gamma math ops digamma math ops digamma math ops digamma array ops fill np array math ops logical and array ops where control flow ops with dependencies check ops assert less array ops ones check ops assert less array ops ones control flow ops with dependencies check ops assert positive control flow ops with dependencies check ops assert positive check ops assert less array ops ones
dic t ops name scope distribution util get log its and p robs distribution util embed check categorical event shape ops convert to tensor ops name scope array ops rank array ops shape tensor shape dimension value ops convert to tensor ops name scope constant op constant ops name scope super array ops identity constant op constant tensor shape tensor shape array ops reshape random ops multi no mi al array ops reshape array ops transpose array ops c on cat math ops cast ops convert to tensor distribution util embed check integer cast close broadcast cat event and params array ops reshape array ops reshape array ops where array ops sequence mask array ops zero like math ops reduce sum array ops reshape array ops shape ops convert to tensor distribution util embed check integer cast close broadcast cat event and params nn ops sparse soft max cross entropy with log its math ops reduce sum nn ops log soft max math ops arg max math ops cast ret set shape
dic t ops name scope maybe assert valid concentration ops convert to tensor math ops reduce sum super array ops shape array ops shape random ops random gamma math ops reduce sum log un normalized pro b math ops exp log pro b maybe assert valid sample math ops reduce sum math ops x logy special math ops l beta math ops cast math ops digamma math ops reduce sum math ops digamma array ops matrix set dia g math ops mat mul math ops r sqr t math ops cast array ops fill array ops shape np array array ops where math ops reduce all control flow ops with dependencies check ops assert less array ops ones control flow ops with dependencies check ops assert positive check ops assert rank at least check ops assert less array ops shape control flow ops with dependencies check ops assert positive check ops assert near array ops ones math ops reduce sum
dic t ops name scope ops convert to tensor distribution util embed check non negative integer form maybe assert valid concentration ops convert to tensor math ops reduce sum super array ops shape array ops shape math ops cast array ops reshape math ops log random ops random gamma random ops multi no mi al distribution util gen new seed math ops reduce sum array ops one hot array ops c on cat array ops reshape math ops cast maybe assert valid sample special math ops l beta special math ops l beta distribution util log combinations math ops exp log pro b array ops matrix set dia g math ops mat mul math ops sqr t distribution util embed check categorical event shape control flow ops with dependencies check ops assert positive distribution util embed check non negative integer form control flow ops with dependencies check ops assert equal math ops reduce sum
enumerate tensor util be tensor value error type ops name scope ops name scope cls param shape is instance value error cls param shape tensor util constant value value error tensor shape tensor shape not implemented error k starts with dic t type not implemented error format type name scope ops convert to tensor tensor shape tensor shape tensor shape as shape not implemented error format type name scope ops convert to tensor tensor shape tensor shape tensor shape as shape name scope ops convert to tensor be scalar helper name scope ops convert to tensor be scalar helper not implemented error format type name scope ops convert to tensor expand sample shape to vector sample n array ops shape array ops c on cat array ops reshape set sample static shape call sample n not implemented error format type name scope convert to tensor log pro b math ops log pro b call log pro b not implemented error format type name scope convert to tensor pro b math ops exp log pro b call pro b not implemented error format type name scope convert to tensor log cd f math ops log cd f call log cd f not implemented error format type name scope convert to tensor cd f math ops exp log cd f call cd f not implemented error format type name scope convert to tensor log survival function math ops log 1 p cd f call log survival function not implemented error format type name scope convert to tensor survival function cd f call survival function not implemented error format type name scope not implemented error format type name scope not implemented error format type name scope convert to tensor quan tile call quan tile not implemented error format type name scope math ops square not implemented error format type name scope math ops sqr t not implemented error format type name scope not implemented error format type name scope kull back leib ler cross entropy name scope cross entropy kull back leib ler kl divergence name scope kl divergence format type format format format type ops name scope ops name scope tensor util constant value math ops reduce prod np prod array ops rank util pick vector math ops equal np array array ops shape array ops reshape ops convert to tensor np array array ops reshape value error tensor shape tensor shape tensor util constant value x set shape sample shape concatenate x set shape tensor shape tensor shape x set shape tensor shape tensor shape x set shape math ops equal array ops shape
dic t ops name scope ops convert to tensor super array ops ones ops convert to tensor log pro b math ops log array ops c on cat array ops shape random ops random uniform np f info math ops log
dic t ops name scope ops control dependencies check ops assert positive check ops assert positive array ops identity array ops identity check ops assert same float d type super dic t zip ops convert to tensor array ops broadcast dynamic shape array ops shape array ops shape array ops broadcast static shape constant op constant tensor shape tensor shape random ops random gamma log un normalized pro b maybe assert valid sample math ops i gamma maybe assert valid sample math ops x logy math ops l gamma math ops log math ops log math ops l gamma math ops digamma math ops square math ops sqr t array ops fill np array array ops where control flow ops with dependencies check ops assert less array ops ones check ops assert same float d type control flow ops with dependencies check ops assert positive
dic t ops name scope ops control dependencies check ops assert positive array ops identity array ops identity check ops assert same float d type super dic t zip ops convert to tensor array ops broadcast dynamic shape array ops shape array ops shape array ops broadcast static shape constant op constant tensor shape tensor shape array ops c on cat random ops random uniform np next after d type as num py d type d type as num py d type math ops sign math ops log 1 p math ops abs log un normalized pro b math ops exp log pro b special math log cd f laplace z special math log cd f laplace z z math ops sign math ops exp math ops abs math ops abs z math log math ops log array ops zero like math log math ops log array ops zero like math sqr t array ops zero like
dic t ops name scope ops convert to tensor distribution util embed check non negative integer form distribution util get log its and p robs super array ops shape array ops shape math ops cast array ops ones like array ops ones like array ops reshape array ops reshape random ops multi no mi al array ops reshape math ops reduce sum array ops one hot map fn map fn array ops transpose array ops c on cat array ops reshape log un normalized pro b log normalization maybe assert valid sample math ops reduce sum nn ops log soft max maybe assert valid sample distribution util log combinations array ops identity array ops ones like array ops matrix set dia g math ops mat mul array ops ones like distribution util embed check non negative integer form control flow ops with dependencies check ops assert equal math ops reduce sum
dic t ops name scope ops control dependencies check ops assert positive array ops identity array ops identity check ops assert same float d type super dic t zip ops convert to tensor array ops broadcast dynamic shape array ops shape array ops shape array ops broadcast static shape constant op constant tensor shape tensor shape array ops c on cat random ops random normal log un normalized pro b special math log nd tr z special math nd tr z special math log nd tr z special math nd tr z math ops square z math log math ops log array ops ones like math log math ops log array ops ones like in v z special math nd tri array ops ones like ops name scope ops name scope
callable type error value error

dic t ops name scope ops control dependencies check ops assert positive array ops identity array ops identity array ops identity check ops assert same float d type super dic t zip ops convert to tensor array ops broadcast dynamic shape array ops shape array ops broadcast dynamic shape array ops shape array ops shape array ops broadcast static shape array ops broadcast static shape constant op constant tensor shape tensor shape array ops c on cat random ops random normal array ops ones random ops random gamma distribution util gen new seed math ops r sqr t log un normalized pro b math ops log 1 p math ops log math ops abs math ops log np log math ops l gamma math ops l gamma math ops abs math ops beta inc array ops where math ops less array ops ones array ops c on cat math ops log math ops abs math ops log special math ops l beta math ops digamma math ops digamma array ops ones np array array ops where math ops greater array ops ones array ops fill control flow ops with dependencies check ops assert less array ops ones array ops where math ops greater array ops ones like array ops ones math ops square np array array ops where array ops fill array ops fill np array array ops where math ops greater array ops ones array ops fill control flow ops with dependencies check ops assert less array ops ones array ops identity
dic t ops name scope ops control dependencies check ops assert less array ops identity array ops identity check ops assert same float d type super dic t zip ops convert to tensor name scope array ops broadcast dynamic shape array ops shape array ops shape array ops broadcast static shape constant op constant tensor shape tensor shape array ops c on cat random ops random uniform array ops ones array ops where math ops be nan array ops where math ops logical or array ops zero like array ops ones like array ops broadcast dynamic shape array ops shape array ops zero array ops ones array ops where array ops where math ops log math ops square math sqr t
register kl type type not implemented error type type ops name scope kl fn array ops identity ops control dependencies control flow ops assert math ops logical not math ops reduce any math ops be nan array ops identity
c api t f get code make specific exception as text c api t f message c api t f get code
baseline class i fier v 2 doc replace head lib binary logistic or multi class head baseline model fn super
baseline model fn super
baseline regress or v 2 doc replace head lib regression head baseline model fn super
dnn class i fier v 2 doc replace head lib binary logistic or multi class head estimator can estimator api gauge get cell dnn model fn tuple super
dnn model fn tuple estimator can estimator api gauge get cell super
dnn linear combined class i fier v 2 doc replace validate feature columns head lib binary logistic or multi class head estimator can estimator api gauge get cell dnn linear combine model fn super
validate feature columns estimator can estimator api gauge get cell dnn linear combine model fn super
dnn linear combined regress or v 2 doc replace validate feature columns estimator can estimator api gauge get cell head lib regression head dnn linear combine model fn super
dnn regress or v 2 doc replace head lib regression head estimator can estimator api gauge get cell dnn model fn tuple super
estimator api gauge get cell class assert members be not override maybe overwrite model dir and session config log info str var s get replica device setter value error model fn lib verify model fn arg s copy deep copy get default warm start settings copy deep copy copy deep copy call model fn check checkpoint available train load variable check checkpoint available train list variables checkpoint management latest checkpoint estimator api gauge get cell value error format value error value error format value error format load global step from checkpoint dir log info check hook type hook extend convert train step to hook check listeners type train model log info get at tr basic session run hook multi steps top at step hook train stop at step hook os path join estimator api gauge get cell has at tr distribute coordinator train estimator evaluate est actual e val actual e val check hook type hook extend convert e val step to hook checkpoint management latest checkpoint log info format evaluate build graph evaluate run e val dir value error format get at tr evaluation multi steps top after ne val shook evaluation stop after ne val shook estimator api gauge get cell check hook type checkpoint management latest checkpoint log info format random seed set random seed create and assert global step get feature from input fn call model fn maybe warm start extract key list all hook extend all hook extend list train monitored session train chief session creator mon ses s run is instance range extract batch length six it er items assert members be not override value error export all save model export all save model g file is directory checkpoint management latest checkpoint value error format export lib get time stamped export dir export lib get temp export dir save model builder saved model builder input receiver fn map get add meta graph for mode input receiver fn map get add meta graph for mode input receiver fn map get add meta graph for mode value error format builder save os path join as bytes as bytes os path join as bytes as bytes os path dir name g file make dir s g file copy g file rename create and assert global step random seed set random seed call model fn get at tr export lib export output for mode export lib build all signature def s get at tr session session saver saver value error graph saver restore format value error builder add train op dic t ops get collection builder add meta graph and variables builder add meta graph call input fn estimator util parse input fn result validate feature in predict input have data set or queue runner log warn distribution make input fn iterator call input fn estimator util distributed iterator initializer hook call input fn estimator util data set initializer hook estimator util parse input fn result call input fn six it er items value error is instance value error six it er items value error train create global step create global step function utils fn arg s log info ops device input fn function utils fn arg s value error log info model fn log info is instance value error train model distribute train model default g device random seed set random seed create and assert global step train util get or create global step read get feature and label from input fn worker hook extend call model fn train util get global step train with estimator spec has at tr distribute coordinator train estimator train est actual train model distribute config train distribute configure actual train model distribute strategy class name starts with has at tr random seed set random seed get iterator from input fn worker hook extend create and assert global step ops add to collection strategy extend read var is instance strategy extend call for each replica c tx set last step output c tx set non tensor output constant op constant strategy extend experimental run step on iterator estimator util parse iterator result strategy extend call for each replica strategy reduce combine distribute scaffold train distribution experimental local result get hook from the first device get hook from the first device model fn lib estimator spec strategy group train with estimator spec value error train monitored training session tuple mon ses s run log warn log info warm start util warm start any ops get collection summary scalar ops add to collection worker hook extend worker hook append train nan tensor hook worker hook append train logging tensor hook worker hook extend ops get collection ops add to collection train saver type train with estimator spec distribute list is instance train checkpoint saver hook value error saver hooks 0 listeners append worker hook append train summary saver hook worker hook append train step counter hook train monitored training session tuple tuple mon ses s run log warn random seed set random seed create and assert global step call model fn e val distribute call model fn e val train util get global step maybe warm start value error list all hook extend all hook extend list monitor session scaffold control flow ops group get feature and label from input fn call model fn verify and create loss metric extract metric update ops get iterator from input fn e val distribution class name starts with is instance e val distribution extend call for each replica verify and create loss metric extract metric update ops c tx set non tensor output c tx set non tensor output e val distribution extend experimental run step on iterator estimator util parse iterator result e val distribution extend call for each replica verify and create loss metric extract metric update ops combine distribute scaffold e val distribution experimental local result evaluation evaluate once write dic t to summary write checkpoint path to summary log info warm start util warm start value error export all save model
linear class i fier v 2 doc replace validate linear s dc a optimizer for linear class i fier estimator can estimator api gauge get cell head lib binary logistic or multi class head linear model fn tuple super
linear model fn tuple estimator can estimator api gauge get cell super
linear regress or v 2 doc replace validate linear s dc a optimizer for linear regress or head lib regression head estimator can estimator api gauge get cell linear model fn tuple super
fc make parse example spec parse ops fixed len feature add label and weight to parse spec
fc make parse example spec parse ops fixed len feature add label and weight to parse spec
is instance value error format validate and convert feature list is instance value error collections ordered dic t sort list set set value error format len order dic t data update get unique target key len set is instance value error format feed function en queue data queue de queue many queue de queue up to batch pop is instance dic t zip batch len feature keys len is instance dic t zip batch len target keys len
type error is instance value error format is instance type error value error np array equal value error is instance get unique target key list len len max feed function en queue data queue de queue many queue de queue up to len len dic t zip list is instance feature pop zip feature pop

super value error config pb 2 config proto session config has field value error session config cluster def copy from super k war gs pop super

is instance value error any value error format value error util lib check positive integer value error util lib check positive integer util lib check positive integer value error format value error estimator lib verify model fn arg s augment model fn config replace super util lib parse iterations per loop int math ce il float tpu context get tpu context is instance value error format log warn format value error super super call model fn for inference super tpu tpu inference context super super value error format model fn inference on tpu create global step c tx with mode super value error util lib check positive integer util lib check positive integer tpu stop at step hook c tx with mode super value error util lib check positive integer evaluation stop after ne val shook set eva literati on shook function utils fn arg s value error format c tx with mode value error add item to params c tx be run on cpu ops device input fn add item to params input fn error handle error rendezvous super rendezvous record error rendezvous record do error handle error rendezvous super rendezvous record error rendezvous record do error handle error rendezvous super rendezvous record error rendezvous record do rendezvous record do add item to params add item to params c tx with mode model fn wrapper examples per second hook c tx be run on cpu log info model fn wrapper call without tpu estimator spec replace callable tpu embed gradient create dummy table variables tpu in it ops append input pipeline is instance graph get collection ref graph add to collection train on tpu system tpu estimator embed get full variable name c tx embed config tpu embed create variables and ops tpu in it ops extend get scaffold os en v iron get value error shutdown hook append session support graceful shutdown hook ops control dependencies array ops identity hook extend tpu in feed out feed session hook check add preemption hook hook extend preempt hook cloud tpu preempted hook examples hook set step per run hook append train logging tensor hook array ops identity hook append hook extend train checkpoint saver hook checkpoint hook set step per run checkpoint hook set step per run chief hook append summary scalar ops control dependencies sync variables ops update ops extend control flow ops group graph add to collection model fn lib estimator spec e val on tpu system tpu estimator embed get full variable name c tx embed config tpu embed create variables and ops tpu in it ops extend get scaffold math ops div math ops cast ops control dependencies sync variables ops internal ops to run append increase e val step op host call ret get ops control dependencies e val update ops append ops control dependencies array ops identity tpu in feed out feed session hook check add preemption hook hook extend preempt hook cloud tpu preempted hook hook extend model fn lib estimator spec predict on tpu system get scaffold ops control dependencies sync variables ops ops control dependencies en queue ops append verify cross host transfer size ops control dependencies stop signals as scalar stop signal padding signals slice tensor or dic t stopping predict hook tpu in feed out feed session hook for prediction hook extend model fn lib estimator spec
out feed host call validate tuple tuple tuple is instance type error format super out feed host call create cpu host call out feed host call hook tt trace cpu tuple model fn lib estimator spec
categorical column with vocabulary file
internal input layer
variable scope variable scope strip lead slash linear model linear model layer cols to var s update
is instance value error format six it er items value error format result update
runtime error value error format value error callable value error in it ops truncate normal initializer math sqr t sort is instance value error format type is instance is instance is instance type value error format type type value error format join result append fc old shared embedding column
copy
delete recursively
file exist
super
get match file
be directory
list directory
recursive create dir
create dir
delete file
rename
stat
walk
node input index split output node at tr d type copy from output node at tr value copy from at tr value pb 2 at tr value tensor util make tensor proto extract sub graph variable dic t name append variable name append variable name append get input name source op name append get input name get input name source op name append get input name value error ses s run dic t zip log info len create const op output node input append str output node at tr at tr name copy from output node at tr t copy from output node input extend output node at tr t copy from output node at tr class copy from value error create const op output graph def node extend output node input extend output node at tr t params copy from output node at tr t indices copy from output node at tr taxis copy from output node at tr class copy from output node copy from output graph def node extend output graph def library copy from log info
is instance type error is instance type error extract graph summary assert nod be present bf s for reachable nod sort list out node extend copy deep copy out library copy from out versions copy from
is instance is instance be variable op
new node copy from re sub new node input append nod after removal append control input name add node input replace node name with control input add new node copy from re sub re sub new node input append nod after splice append output graph node extend
graph get tensor by name

deprecation deprecate argument lookup gen image ops crop and resize
draw bound box
gen image ops extract glimpse
gen image ops resize bi linear gen image ops resize nearest neighbor gen image ops resize bi cubic gen image ops resize area value error resize image common
py wrap tensor flow t fe py fast path execute resize area eager fallback ops raise from not ok status execute make boo l op def library apply op helper op get at tr type op get at tr boo l execute record gradient
resize image resize image with pad common
ops name scope gen image ops sample distort bound box
variance scaling
variance scaling
variance scaling
variance scaling

get session initialize variables
name scope name scope exit

super log warn user warning summary ops create file writer summary ops graph summary file writer summary file writer weight name replace summary histogram array ops squeeze k int shape len array ops transpose k int shape array ops reshape len array ops transpose k int shape array ops reshape len array ops reshape k int shape len summary image weight name replace model optimizer get gradients type be index slice summary histogram format has at tr is instance enumerate summary histogram format summary histogram format in it writer make histogram ops train utils standardize input data type array ops placeholder array ops placeholder model get layer np prod array ops reshape int int variables variable array ops zero state ops assign assign embedding s append saver saver list is instance import error projector visualize embedding s writer add summary is instance summary ops scalar is instance writer add summary log get write custom summaries profiler save model test function fetch append write custom summaries model test function fetch remove model test function fetch callback s pop value error min slice is instance enumerate fee dic t update is instance ses s run saver save os path join profiler save
not implemented error model to est i amt or usage gauge get cell lib model to estimator
np is scalar is instance type error type d types as d type constant op constant
assert float d type d types as d type len value error is instance lina lg ops i mpl eye array ops slice
d types as d type array ops ones
assert float d type d types as d type len value error int int random ops random normal gen lina lg ops qr array ops dia g part math ops sign array ops matrix transpose array ops reshape
super
super
super
value error value error value error assert float d type d types as d type compute fan max max max math sqr t random ops truncate normal math sqr t random ops random normal math sqr t random ops random uniform
d types as d type array ops zero
super
super
variance scaling
variance scaling
variance scaling
variance scaling
replace in base doc string
collections named tuple cell spec super initializer s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get regularize rs get constraints get constraints get constraints get super is instance int add weight add weight add weight array ops transpose array ops expand dim recurrent canonical to params gen cudnn rnn ops cudnn rnn v 2 array ops transpose initializer s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize constraints serialize super dic t list list
collections named tuple cell spec super initializer s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get regularize rs get constraints get constraints get constraints get super is instance int add weight add weight array ops c on cat bias initializer bias initializer add weight array ops transpose array ops expand dim array ops expand dim recurrent canonical to params gen cudnn rnn ops cudnn rnn v 2 array ops transpose initializer s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize constraints serialize super dic t list list
super json load super json dump is instance value error fc feature transformation cache ops name scope column get dense tensor process dense tensor output tensors append verify and c on cat tensors
log warn gru cell k war gs get k war gs get super regularize rs get input spec maybe reset cell dropout mask super activation s serialize activation s serialize initializer s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize constraints serialize super dic t list list cls
k war gs pop super activation s get activation s get initializer s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get constraints get min max min max log debug cache device add weight add weight add weight get dropout mask for cell get recurrent dropout mask for cell array ops un stack k dot k dot k dot k bias add k bias add k bias add k dot k dot k bias add k bias add recurrent activation recurrent activation k dot k bias add k dot activation k dot k bias add array ops split k dot k bias add k dot array ops split recurrent activation recurrent activation k dot activation activation s serialize activation s serialize initializer s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize constraints serialize super dic t list list generate zero fill state for cell
log warn lstm cell k war gs get k war gs get super regularize rs get input spec maybe reset cell dropout mask super activation s serialize activation s serialize initializer s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize constraints serialize super dic t list list cls
k war gs pop super activation s get activation s get initializer s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get constraints get min max min max log debug data structure no dependency cache device add weight add weight k concatenate bias initializer bias initializer add weight recurrent activation k dot recurrent activation k dot activation k dot recurrent activation k dot recurrent activation recurrent activation activation recurrent activation get dropout mask for cell get recurrent dropout mask for cell array ops split k dot k dot k dot k dot array ops split k bias add k bias add k bias add k bias add compute carry and output k dot k dot k bias add array ops split compute carry and output fuse activation activation s serialize activation s serialize initializer s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize constraints serialize super dic t list list list generate zero fill state for cell
value error super
value error super
value error super
super super
super
super
super
super
super
super
super super

k war gs pop k war gs pop policy policy super value error format value error format vs variable scope runtime error is instance base layer to snake case backend unique object name value error len len super new losses append add elements to collection super vs variable scope vs variable scope type error super value error is instance set set set scope len vs variable scope ops name scope super d types as d type should add regularize r handle weight regular iz ation k war gs pop value error format super set scope vs variable scope vs variable scope function utils fn arg s super add elements to collection set set cls new memo id self id set at tr set at tr copy copy base layer be tensor or tensor list set at tr set at tr copy deep copy super
value error super
value error super
value error super
super
super
average pooling 1 d layer apply
average pooling 2 d layer apply
average pooling 3 d layer apply
batch normalization layer apply
conv 1 d layer apply
conv 2 d layer apply
conv 2 d transpose layer apply
conv 3 d layer apply
conv 3 d transpose layer apply
dense layer apply
dropout layer apply
flatten layer apply
max pooling 1 d layer apply
max pooling 2 d layer apply
max pooling 3 d layer apply
separable conv 1 d layer apply
separable conv 2 d layer apply
value error use global indices add value error get new global index value error get new global index value error array ops identity identity op op set at tr at tr value pb 2 at tr value as bytes identity op op set at tr at tr value pb 2 at tr value as bytes identity op op set at tr at tr value pb 2 at tr value identity op op set at tr at tr value pb 2 at tr value identity op op set at tr at tr value pb 2 at tr value as bytes json dump identity op op set at tr at tr value pb 2 at tr value identity op op set at tr at tr value pb 2 at tr value as bytes is instance validate children input mappings op hint op hint argument tracker op hint op hint argument tracker is instance is instance assert dic t list have key assert dic t list have key assert dic t list have key ops convert to tensor de st op op set at tr at tr value pb 2 at tr value input add output add input add zip input add output add zip output add
super value error freeze graph cls build debug info fun c file io file exist io error format file io file io graph def parse from string is instance six ensure text six ensure binary text format merge io error format import graph def be freeze graph value error get tensors from tensor name get tensors from tensor name set tensor shape cls value error set set value error cls set freeze save model cls build debug info fun c value error backend set learn phase model load model save utils trace model call convert to constants convert variables to constants set tensor shape cls build debug info fun c backend set learn phase model load model get tensors from tensor name get tensors from tensor name set tensor shape freeze graph cls build debug info fun c warn warn warn warn object set at tr warn warn set warn warn object get attribute value error format get tensor name value error format get tensor name set batch size quant ize stats append invalid stats append value error format join value error value error value error run graph optimization s get debug info converter k war gs update to co convert i mpl to co convert graph def calibrate quant ize model get tensor name value error tensor set shape
tfl ite converter from session tfl ite converter from freeze graph tfl ite converter from save model tfl ite converter from model file
k war gs get to co convert i mpl

get next log count per token log if
get next log count per token log if
v log


ops name scope
value error
value error value error ops name scope math ops cast math ops cast math ops abs math ops subtract compute weight loss
ops add to collection
reduction validate ops name scope ops control dependencies weight broadcast ops assert broadcast able ops convert to tensor math ops cast math ops cast math ops multiply math ops reduce sum safe mean math ops reduce sum array ops ones like safe mean num present safe mean num elements math ops cast util add loss
deprecate argument lookup value error value error value error ops name scope math ops cast math ops cast math ops multiply math ops reduce sum compute weight loss
ops get collection
get regular iz ation losses math ops add n constant op constant
ops get collection
get losses get regular iz ation losses math ops add n
value error value error ops name scope math ops cast math ops cast array ops ones like math ops subtract nn ops relu math ops subtract math ops multiply compute weight loss
value error value error ops name scope math ops cast math ops cast math ops subtract math ops abs math ops minimum math ops subtract math ops add math ops multiply ops convert to tensor math ops multiply math ops multiply compute weight loss
value error value error ops name scope math ops cast math ops cast math ops multiply math ops log math ops multiply math ops log compute weight loss
value error value error ops name scope math ops cast math ops cast ops control dependencies weight broadcast ops assert broadcast able math ops cast math ops subtract math ops range array ops rank math ops reduce sum math ops square num present math ops div no nan math ops maximum math ops reduce sum math ops div no nan math ops square math ops maximum math ops multiply math ops multiply math ops reduce sum array ops where math ops reduce sum array ops zero like util add loss
value error value error ops name scope math ops cast math ops cast math ops square difference compute weight loss
value error value error ops name scope ops convert to tensor math ops cast nn s igm oid cross entropy with log its compute weight loss
value error value error ops name scope ops convert to tensor math ops cast math ops cast array ops shape array ops stop gradient nn soft max cross entropy with log its compute weight loss
value error value error ops name scope remove s que ez able dimension nn sparse soft max cross entropy with log its compute weight loss
ops name scope gen nn ops in top kv 2
deprecation deprecate argument lookup soft max
deprecation deprecate argument lookup soft max
runtime error remove s que ez able dimension math ops cast math ops cast math ops equal mean
runtime error variable scope variable scope value error sort len range confusion matrix at thresholds math ops div no nan math ops maximum math ops multiply array ops where math ops logical and math ops div no nan math ops maximum array ops ones like math ops reduce sum math ops div no nan math ops log math ops maximum log warn interpolate pr auc math ops div math ops div math ops div math ops reduce sum math ops multiply math ops reduce sum math ops multiply math ops minimum math ops reduce sum math ops multiply math ops maximum value error compute auc aggregate across replicas compute auc ops add to collections
runtime error value error ops name scope at k name nn top k clean out of range indices math ops cast array ops shape stream sparse average precision at top k
runtime error variable scope variable scope remove s que ez able dimension math ops cast math ops cast math ops logical and math ops equal math ops equal count condition
runtime error variable scope variable scope confusion matrix at thresholds aggregate variable ops add to collections
runtime error variable scope variable scope remove s que ez able dimension math ops cast math ops cast math ops logical and math ops equal math ops equal count condition
runtime error variable scope variable scope confusion matrix at thresholds aggregate variable ops add to collections
runtime error variable scope variable scope math ops cast metric variable metric variable math ops cast array ops size remove s que ez able dimension weight broadcast ops broadcast weight math ops cast math ops multiply math ops reduce sum state ops assign add math ops reduce sum ops control dependencies state ops assign add math ops div no nan math ops maximum aggregate across replicas math ops div no nan math ops maximum ops add to collections
runtime error remove s que ez able dimension math ops abs mean
runtime error remove s que ez able dimension math ops multiply math ops reduce sum mean math ops subtract math ops subtract ops add to collections ops add to collections
runtime error variable scope variable scope stream confusion matrix math ops cast math ops reduce sum math ops cast math ops reduce sum math ops cast array ops dia g part math ops reduce sum math ops cast math ops not equal array ops where math ops greater array ops ones like math ops div array ops where math ops greater math ops reduce sum aggregate across replicas ops add to collections
runtime error variable scope variable scope math ops cast array ops reshape array ops reshape metric variable metric variable array ops ones array ops size math ops cast math ops cast math ops equal array ops reshape math ops cast state ops scatter add state ops scatter add math ops div no nan math ops maximum math ops reduce mean aggregate across replicas math ops div no nan math ops maximum ops add to collections
runtime error remove s que ez able dimension confusion matrix remove s que ez able dimension array ops where math ops equal array ops zero like math ops div math ops abs mean
runtime error remove s que ez able dimension math ops square difference mean
runtime error variable scope variable scope math ops cast metric variable metric variable array ops ones like remove s que ez able dimension weight broadcast ops broadcast weight math ops cast math ops multiply math ops multiply state ops assign add ops control dependencies state ops assign add math ops div no nan math ops maximum aggregate across replicas math ops div no nan math ops maximum ops add to collections
runtime error math ops cast math ops less mean
runtime error variable scope variable scope remove s que ez able dimension math ops cast math ops cast true positives false positives array ops where math ops greater math ops div compute precision aggregate across replicas compute precision ops add to collections
runtime error ops name scope at k name nn top k precision at top k
runtime error variable scope variable scope confusion matrix at thresholds math ops div compute precision aggregate across replicas compute precision ops add to collections
runtime error ops name scope at k name maybe expand label math ops cast stream sparse true positive at k stream sparse false positive at k math ops div math ops add aggregate across replicas math ops div math ops add ops add to collections
runtime error variable scope variable scope remove s que ez able dimension math ops cast math ops cast true positives false negative array ops where math ops greater math ops div compute recall aggregate across replicas compute recall ops add to collections
runtime error ops name scope at k name nn top k recall at top k
runtime error variable scope variable scope confusion matrix at thresholds math ops div compute recall aggregate across replicas compute recall ops add to collections
ops name scope at k name maybe expand label math ops cast stream sparse true positive at k stream sparse false negative at k math ops div math ops add aggregate across replicas math ops div math ops add ops add to collections
runtime error remove s que ez able dimension mean square error math ops sqr t aggregate across replicas math ops sqr t ops add to collections
runtime error value error variable scope variable scope range confusion matrix at thresholds math ops div math ops arg min math ops abs math ops cast math ops div compute sensitivity at specificity aggregate across replicas compute sensitivity at specificity ops add to collections
average precision at k
precision at k
runtime error value error variable scope variable scope range confusion matrix at thresholds math ops div math ops reduce min math ops abs math ops equal math ops abs math ops cast math ops cum sum math ops arg max math ops cast math ops div compute specificity at sensitivity aggregate across replicas compute specificity at sensitivity ops add to collections
runtime error variable scope variable scope remove s que ez able dimension math ops cast math ops cast math ops logical and math ops equal math ops equal count condition
runtime error variable scope variable scope confusion matrix at thresholds aggregate variable ops add to collections
runtime error variable scope variable scope remove s que ez able dimension math ops cast math ops cast math ops logical and math ops equal math ops equal count condition
runtime error variable scope variable scope confusion matrix at thresholds aggregate variable ops add to collections
ops name scope deprecation deprecate argument lookup data format starts with get sequence get sequence gen nn ops avg pool
deprecate argument lookup deprecate argument lookup deprecate argument lookup batch normalization
rnn cell i mpl assert like rnn cell rnn cell i mpl assert like rnn cell vs variable scope vs variable scope dynamic rnn array ops reverse sequence array ops reverse vs variable scope reverse nest map structure dynamic rnn reverse
deprecation deprecate argument lookup ops name scope value error get sequence get sequence array ops expand dim array ops expand dim gen nn ops conv 2 d array ops squeeze
deprecation deprecate argument lookup convert pad data format starts with get sequence get sequence gen nn ops conv 2 d
convert pad gen nn ops conv 2 d back prop filter
deprecation deprecate argument lookup convert pad gen nn ops conv 2 d back prop input
deprecate argument lookup deprecate argument lookup ops name scope conv 2 d transpose
deprecate argument lookup gen nn ops conv 3 d
py wrap tensor flow t fe py fast path execute conv 3 d back prop filter eager fallback dispatch dispatch ops raise from not ok status is instance type error execute make int execute make str execute make str is instance type error execute make int op def library apply op helper dispatch dispatch op get at tr type op get at tr op get at tr op get at tr op get at tr execute record gradient
deprecate argument lookup deprecate argument lookup conv 3 d transpose
deprecate argument lookup deprecate argument lookup convolution internal
ops name scope ops convert to tensor array ops c on cat gen nn ops relu
gen ct c ops ct c beam search decoder sparse tensor sparse tensor zip
is instance type error deprecation deprecate argument lookup array ops transpose gen ct c ops ct c loss
is instance value error get dim get dim array ops c on cat sparse tensor sparse tensor array ops where ct c loss ct c loss dense
deprecate argument lookup ops name scope ops convert to tensor ops convert to tensor nn ops depth wise conv 2 d native nn ops depth wise conv 2 d native nn ops with space to batch array ops shape
py wrap tensor flow t fe py fast path execute depth wise conv 2 d native eager fallback dispatch dispatch ops raise from not ok status is instance type error execute make int execute make str execute make str is instance type error execute make int op def library apply op helper dispatch dispatch op get at tr type op get at tr op get at tr op get at tr op get at tr execute record gradient
deprecate argument lookup deprecate argument lookup gen nn ops dilation 2 d
value error deprecation deprecate argument lookup value error dropout
rnn cell i mpl assert like rnn cell vs variable scope var scope set cache device nest flatten ops convert to tensor tuple transpose batch time math ops cast value error array ops identity best effort input batch size value error get at tr cell get initial state cell zero state array ops shape array ops stack control flow ops assert math ops reduce all math ops equal ops control dependencies assert have shape array ops identity nest pack sequence as dynamic rnn loop nest map structure
is instance embed lookup rag embed lookup and transform
log warn value error is instance list is instance is instance type error is instance type error ops name scope math ops cast array ops unique embed lookup math ops cast math ops cast array ops gather array ops fill array ops expand dim array ops rank array ops c on cat array ops shape array ops reshape weight set shape orig weight shape concatenate range math ops segment sum math ops segment sum math ops segment sum math ops div math ops segment sum math ops pow math ops segment sum math ops sqr t math ops div math ops sparse segment sum math ops sparse segment mean math ops sparse segment sqr t n
ops name scope math ops negative gen nn ops dilation 2 d math ops negative array ops reverse
gen nn ops fractional avg pool
gen nn ops fractional max pool
ops convert to tensor ops convert to tensor ops convert to tensor value error constant op constant constant op constant gen nn ops fuse batch norm v 3
deprecation deprecate argument lookup ops name scope data format starts with get sequence get sequence np is scalar is instance any value error gen nn ops max pool
value error deprecate argument lookup gen nn ops max pool with arg max
deprecate argument lookup ops name scope math ops cast math ops reduce mean math ops reduce mean math ops square difference array ops stop gradient array ops squeeze array ops squeeze math ops cast math ops cast
compute sample log its s igm oid cross entropy with log its sum row
deprecate argument lookup ops name scope ops convert to tensor len value error get stride and dilation rate np any value error np any value error value error data format starts with list list range list list range dic t dic t value error dic t array ops expand dim pool ops op key array ops squeeze with space to batch
py wrap tensor flow t fe py fast path execute quantized avg pool output make quant ize avg pool eager fallback ops raise from not ok status is instance type error execute make int is instance type error execute make int execute make str op def library apply op helper op get at tr type op get at tr op get at tr op get at tr execute record gradient quantized avg pool output make
py wrap tensor flow t fe py fast path execute quantized conv 2 d output make quant ize conv 2 d eager fallback ops raise from not ok status is instance type error execute make int execute make str execute make type is instance type error execute make int op def library apply op helper op get at tr type op get at tr type op get at tr type op get at tr op get at tr op get at tr execute record gradient quantized conv 2 d output make
py wrap tensor flow t fe py fast path execute quantized max pool output make quant ize max pool eager fallback ops raise from not ok status is instance type error execute make int is instance type error execute make int execute make str op def library apply op helper op get at tr type op get at tr op get at tr op get at tr execute record gradient quantized max pool output make
py wrap tensor flow t fe py fast path execute quantized relu x output make quant ize relu x eager fallback ops raise from not ok status execute make type op def library apply op helper op get at tr type op get at tr type execute record gradient quantized relu x output make
rnn cell i mpl assert like rnn cell callable type error vs variable scope var scope set cache device constant op constant loop fn nest flatten constant op constant tensor shape dimension at index static batch size merge with tensor shape dimension at index tensor shape dimension value array ops shape nest assert same structure nest flatten ops convert to tensor nest pack sequence as nest flatten array ops shape nest flatten len tensor array ops tensor array tensor shape tensor shape maybe tensor shape from tensor enumerate zip nest pack sequence as array ops zero c on cat zip nest pack sequence as math ops logical not math ops reduce all cell nest assert same structure nest assert same structure loop fn nest assert same structure nest assert same structure nest assert same structure is instance ops co locate with array ops where nest map structure copy some through copy some through nest map structure ta write math ops logical or control flow ops while loop
ops name scope ops convert to tensor ops convert to tensor ops convert to tensor nn ops bias add math ops mat mul nn ops relu
value error is instance list is instance len value error is instance ops convert to tensor ops name scope tensor shape dimension value array ops size sparse ops sparse reshape math ops reduce prod array ops slice array ops gather sparse tensor sparse tensor prune invalid ids prune invalid weight sparse ops sparse fill empty row sparse ops sparse fill empty row embed lookup sparse array ops tile array ops reshape array ops stack array ops shape array ops where array ops zero like array ops reshape array ops c on cat array ops slice math ops cast array ops slice array ops shape final result set shape tensor shape unknown shape value tensor shape dimension
compute sample log its array ops stop gradient nn ops soft max cross entropy with log its
deprecate argument lookup ops name scope ops convert to tensor ops convert to tensor ops convert to tensor point wise filter shape dims 0 assert be compatible with point wise filter shape dims 1 assert be compatible with nn ops depth wise conv 2 d native nn ops with space to batch array ops shape nn ops conv 2 d
nn ops ensure xen t arg s ops name scope ops convert to tensor ops convert to tensor value error array ops zero like array ops where array ops where math ops add math ops log 1 p math ops exp
deprecate argument lookup ensure xen t arg s ops name scope array ops stop gradient soft max cross entropy with log its
deprecate argument lookup ops name scope ops convert to tensor ops convert to tensor math ops cast math ops cast array ops rank array ops transpose array ops c on cat math ops range math ops range move dim to end move dim to end array ops shape flatten outer dim flatten outer dim gen nn ops soft max cross entropy with log its array ops slice math ops subtract array ops reshape cost set shape math ops cast
ensure xen t arg s ops name scope ops convert to tensor ops convert to tensor math ops cast d types as d type array ops shape value error value error value error gen nn ops sparse soft max cross entropy with log its math ops cast shape check append check ops assert equal array ops shape array ops shape ops control dependencies array ops shape array ops rank array ops reshape array ops reshape gen nn ops sparse soft max cross entropy with log its array ops reshape cost set shape math ops cast
rnn cell i mpl assert like rnn cell rnn cell i mpl assert like rnn cell nest be sequence type error value error vs variable scope vs variable scope static rnn vs variable scope reverse seq static rnn reverse seq nest flatten nest flatten tuple array ops c on cat zip nest pack sequence as
rnn cell i mpl assert like rnn cell nest be sequence type error value error vs variable scope var scope set cache device nest be sequence nest flatten tensor shape dimension at index fix batch size merge with enumerate tensor shape dimension value value error tensor shape dimension value tensor shape dimension value array ops shape value error get at tr cell get initial state cell zero state ops convert to tensor value error c on cat array ops zero array ops stack infer state d type c on cat tensor shape dimension value output set shape tensor shape tensor shape nest flatten tuple create zero output nest pack sequence as math ops cast math ops reduce min math ops reduce max be rnn cell nest be sequence enumerate cell rnn step output append len
nest be sequence nest be sequence value error str str nest flatten nest flatten len len value error len len nest pack sequence as state saver state state saver state static rnn nest flatten nest flatten state saver save state zip state saver save state ops control dependencies nest flatten array ops identity nest pack sequence as nest pack sequence as array ops identity array ops identity
list set deprecate argument lookup ops name scope ops convert to tensor all constant op constant array ops gather math ops cast array ops shape math ops reduce prod ops convert to tensor math ops subtract math ops square difference math ops square math ops reduce sum math ops reduce sum
deprecate argument lookup weight cross entropy with log its
deprecate argument lookup ops name scope ops convert to tensor ops convert to tensor math ops cast math ops cast math ops reduce sum array ops zero like math ops reduce sum math ops reciprocal math ops multiply math ops reduce sum math ops square difference math ops multiply array ops squeeze array ops squeeze math ops cast math ops cast
ops name scope ops convert to tensor ops convert to tensor ops convert to tensor math ops mat mul bias add
super check support d types log warn log warn input spec input spec activation s get lstm state tuple value error str check support d types add variable add variable in it ops zero initializer check rnn cell input d types constant op constant array ops split math ops mat mul array ops c on cat nn ops bias add array ops split constant op constant add multiply s igm oid add multiply s igm oid activation multiply activation s igm oid lstm state tuple array ops c on cat activation s serialize super dic t list list
super check support d types log warn input spec input spec activation s get value error str check support d types add variable add variable in it ops zero initializer check rnn cell input d types math ops mat mul array ops c on cat nn ops bias add activation activation s serialize super dic t list list
super
super
super check support d types log warn input spec input spec activation s get initializer s get initializer s get value error str check support d types add variable add variable in it ops constant initializer add variable add variable in it ops zero initializer check rnn cell input d types math ops mat mul array ops c on cat nn ops bias add math ops s igm oid array ops split math ops mat mul array ops c on cat nn ops bias add activation initializer s serialize initializer s serialize activation s serialize super dic t list list
super check support d types log warn log warn log warn input spec input spec initializer s get activation s get lstm state tuple lstm state tuple value error str check support d types partition variables fix size partition er add variable in it ops zero initializer add variable add variable add variable add variable partition variables fix size partition er add variable check rnn cell input d types array ops slice array ops slice value error math ops mat mul array ops c on cat nn ops bias add array ops split s igm oid s igm oid activation s igm oid s igm oid activation clip ops clip by value s igm oid activation s igm oid activation math ops mat mul clip ops clip by value lstm state tuple array ops c on cat initializer s serialize activation s serialize super dic t list list
type error str str
super value error nest be sequence type error len set id len log log first n enumerate is instance track track able any nest be sequence value error str tuple sum ops name scope type tuple cell zero state super is instance is instance is instance enumerate vs variable scope nest be sequence value error len array ops slice cell new state append tuple array ops c on cat
super vs variable scope super get at tr vs variable scope set at tr super get ter is instance list all trainable weight append all non trainable weight append not implemented error not implemented error ops convert to tensor tensor util be tensor tensor util constant value value error format value error format array ops shape value error format zero state has at tr get at tr ops name scope type zero state tensors super
super
copy deep copy copy deep copy copy copy copy copy copy copy copy copy copy copy copy copy
t f prof logger merge default with op log print mdl new profiler graph string t f prof logger merge default with op log print mdl add step graph string build options t f prof node parse from string print mdl profile encode s ys std err write build options t f prof node parse from string print mdl profile encode s ys std err write build options t f prof node parse from string print mdl profile encode s ys std err write build options t f prof node parse from string print mdl profile encode s ys std err write build advisor options advise pb parse from string print mdl profile encode print mdl write profile
t f prof logger merge default with op log build advisor options ret parse from string print mdl print model analysis graph string encode
t f prof logger merge default with op log build options graph string print mdl print model analysis cm d encode t f prof node parse from string s ys std err write print mdl print model analysis cm d encode t f prof node parse from string s ys std err write errors invalid argument error
merge default with op log g file open os path join log write
is instance type error is instance type error is instance value error property property property is instance is instance rt nest split append tuple is instance is instance range len
is instance d types as d type np array rag tensor value ragged tensor value np reshape np array constant value
array ops placeholder ops name scope tensor shape tensor shape array ops placeholder reverse range array ops placeholder rag tensor ragged tensor
ops name scope stateless multi no mi al categorical i mpl
os path dir name inspect get file s ys get frame
os path dir name inspect get file s ys get frame os path join
os path base name len os path dir name directories append
os path join os path dir name os path join os path abs path open

saved model builder doc replace super save and write assets maybe add main op add train op maybe save assets log info copy assets to destination dir is instance type error ops get collection value error format ops add to collection is instance is instance type error ops add to collection assertion error validate signature def map add collections maybe create saver saver export meta graph tag and add meta graph assertion error validate signature def map add collections save model utils get or create variables dir save model utils get variables path maybe create saver saver save saver export meta graph tag and add meta graph saved model builder add meta graph doc replace saved model builder add meta graph and variables doc replace
signature def inputs item copy from signature def outputs item copy from
runtime error build tensor info internal
value error is instance value error value error utils build tensor info value error utils build tensor info value error utils build tensor info value error build signature def
os path join os path join file io file exist file io file exist
graph get tensor by name ops prep end name scope tensor info which one of get tensor sparse tensor sparse tensor get tensor get tensor get tensor struct pb 2 structured value struct code r decode proto get tensor spec from components value error
be valid classification signature be valid regression signature be valid predict signature
saved model loader loader load
ops control dependencies control flow ops group
value error value error utils build tensor info utils build tensor info build signature def
value error is instance value error value error utils build tensor info value error utils build tensor info value error build signature def
signature def utils predict signature def builder saved model builder b add meta graph and variables ops get collection
control flow ops group
gen string ops string length
deprecation deprecate argument lookup ops name scope rag tensor convert to tensor or rag tensor string ops string split string split value error
gen string ops subst r
runtime error event file writer v 2 event file writer super warn warn super event writer add event
file writer
ops get collection
constant op constant summary op util summary scope ops convert to tensor gen log ops audio summary summary op util collect
value error as str any json format parse
constant op constant summary op util summary scope gen log ops histogram summary summary op util collect
constant op constant summary op util summary scope gen log ops image summary summary op util collect
runtime error value error session run serialize graph array ops placeholder session run graph
runtime error constant op constant summary op util clean tag ops name scope gen log ops merge summary summary op util collect
runtime error ops get collection merge
constant op constant summary op util summary scope gen log ops scalar summary summary op util collect
constant op constant summary op util summary scope gen log ops tensor summary summary op util collect
value error summary metadata summary metadata plugin data tensor summary
decorator unwrap inspect is module inspect is class get at tr inspect is class list inspect get mr o list inspect get mr o get at tr attribute error obj dic t get is instance static method stub append set at tr reverse set at tr get at tr parent dic t get is instance static method cache append set at tr reverse set at tr
assert equal graph def
is instance compute gradient list is instance compute dx and dy compute gradient
compute gradient compute error

google test test s rc dir path
value error is instance type error super is instance all is instance value error format replica ids add set range value error format len all value error format log warn verify and get subgroup size opt compute gradients sum grads and var s append ops co locate with sum grads and var s append tpu ops cross replica sum opt apply gradients opt get slot opt get slot name
shard
variable scope variable scope
format
gen tpu ops cross replica sum
ops device tpu system device name tpu ops configure distribute tpu
is instance log warn computation str outside compilation v 2 context computation is instance computation not implemented error is instance
split compile and replicate
replicate
split compile and shard
ops device tpu system device name
super zero slot zero slot call if callable call if callable call if callable ops convert to tensor ops convert to tensor ops convert to tensor get slot get slot train ops apply ada delta math ops cast math ops cast math ops cast get slot get slot train ops resource apply ada delta math ops cast math ops cast math ops cast get slot get slot train ops sparse apply ada delta math ops cast math ops cast math ops cast get slot get slot train ops resource sparse apply ada delta math ops cast math ops cast math ops cast
value error super ops co locate with constant op constant constant op constant get or make slot get or make slot ops convert to tensor ops co locate with array ops identity get slot get slot ops device array ops identity train ops apply ada grad da math ops cast math ops cast math ops cast get slot get slot ops device array ops identity train ops resource apply ada grad da math ops cast math ops cast math ops cast get slot get slot ops device array ops identity train ops sparse apply ada grad da math ops cast math ops cast math ops cast get slot get slot ops device array ops identity train ops resource sparse apply ada grad da math ops cast math ops cast math ops cast
value error super in it ops constant initializer in it constant op get or make slot with initializer gen array ops fill array ops shape math ops cast call if callable ops convert to tensor get slot train ops apply ada grad math ops cast get slot train ops resource apply ada grad math ops cast get slot train ops sparse apply ada grad math ops cast get slot train ops resource sparse apply ada grad math ops cast
super get non slot variable get non slot variable min create non slot variable create non slot variable zero slot zero slot call if callable call if callable call if callable call if callable ops convert to tensor ops convert to tensor ops convert to tensor ops convert to tensor get slot get slot train ops apply adam math ops cast math ops cast math ops cast math ops cast math ops cast math ops cast get slot get slot train ops resource apply adam math ops cast math ops cast math ops cast math ops cast math ops cast math ops cast math ops cast math ops cast math ops cast math ops cast math ops cast math ops cast math ops sqr t get slot state ops assign ops control dependencies scatter add get slot state ops assign ops control dependencies scatter add math ops sqr t state ops assign sub control flow ops group apply sparse share state ops scatter add ops control dependencies resource variable ops resource scatter add apply sparse share ops control dependencies ops co locate with beta 1 power assign beta 2 power assign control flow ops group
super sort is instance value error set at tr saver with op cache ops device data structure no dependency add variable saver save tensor util be tensor as str as str not implemented error session run ops co locate with save counter assign add data structure no dependency session run write checkpoint management update checkpoint state internal os path dir name saver restore
sm session manager
super value error value error value error value error value error ops co locate with constant op constant get or make slot zero slot ops convert to tensor ops convert to tensor ops convert to tensor ops convert to tensor ops convert to tensor get slot get slot train ops apply f trl math ops cast math ops cast math ops cast math ops cast train ops apply f trl math ops cast math ops cast math ops cast math ops cast math ops cast get slot get slot train ops resource apply f trl math ops cast math ops cast math ops cast math ops cast train ops resource apply f trl math ops cast math ops cast math ops cast math ops cast math ops cast get slot get slot train ops sparse apply f trl math ops cast math ops cast math ops cast math ops cast train ops sparse apply f trl math ops cast math ops cast math ops cast math ops cast math ops cast get slot get slot train ops resource sparse apply f trl math ops cast math ops cast math ops cast math ops cast train ops resource sparse apply f trl math ops cast math ops cast math ops cast math ops cast math ops cast
super train ops apply gradient descent math ops cast train ops resource apply gradient descent math ops cast resource variable ops resource scatter add ops indexed slices math ops cast var scatter sub call if callable ops convert to tensor
is instance value error super value error coord register thread looper thread coord wait for stop target
super zero slot callable ops convert to tensor callable ops convert to tensor get slot train ops apply momentum math ops cast math ops cast get slot train ops resource apply momentum math ops cast math ops cast get slot train ops sparse apply momentum math ops cast math ops cast get slot train ops resource sparse apply momentum math ops cast math ops cast
super
create monitor session with worker context worker session creator monitored session all hook extend chief session creator all hook append basic session run hook step counter hook all hook append basic session run hook summary saver hook all hook append basic session run hook checkpoint saver hook all hook extend monitored session
checkpoint reader as bytes error translator
value error compute gradients value error str apply gradients callable tape watch scale loss ops control dependencies tape gradient list zip runtime error scale loss value error assert valid d types assert valid d types ops get collection nest flatten ops get collection get processor value error gradients gradients control flow ops tuple list zip assert valid d types runtime error get filter grad fn tuple value error ops convert to tensor or index slice type error is instance type error get processor convert grads and var s append tuple value error str create slot ops name scope resource variable ops be resource variable ops name scope ops co locate with update ops append processor update op finish ops control dependencies finish ops co locate with is instance resource variable ops assign add variable op ops convert to tensor state ops assign add is instance ops get collection ref train op append distribution extend batch reduce to zip create slot ops convert to tensor or index slice type error is instance type error get processor resource variable ops be resource variable v name split ops name scope p update op ops name scope distribution extend update finish distribution extend non slot devices distribution extend update non slot distribution group ops control dependencies distribution extend update is instance ops get collection ref train op append slot get has at tr name slot get mirror slot get name slot get var key sort from current graph from current graph optimizer variables append sort non slot dic t get distribution strategy extend co locate var s with pre load simple restoration variable scope variable resource variable ops be resource variable handle defer dependencies sort current graph non slot variables append track able track able reference super super get non slot variable non slot dic t get has at tr value error set de duplicate index slice resource apply sparse de duplicate index slice ops indexed slices apply sparse control flow ops group slot get slot dic t var key slot creator create slot restore slot variable name slots var key var var key name slots var key var var key slot dic t var key slot creator create slot with initializer restore slot variable name slots var key var var key name slots var key var var key slot dic t var key slot creator create zero slot restore slot variable name slots var key var var key name slots var key var var key var key defer slot restorations get defer restorations sort checkpoint position restore slot dic t var key name slot get track able checkpoint initial value get or make slot slot variable position restore defer slot restorations set default callable
value error super ops co locate with constant op constant get or make slot ops convert to tensor ops convert to tensor ops convert to tensor get slot train ops apply proxima l ada grad get slot train ops resource apply proxima l ada grad get slot train ops sparse apply proxima l ada grad get slot train ops resource sparse apply proxima l ada grad math ops cast math ops cast math ops cast
super train ops apply proxima l gradient descent train ops resource apply proxima l gradient descent train ops sparse apply proxima l gradient descent train ops resource sparse apply proxima l gradient descent math ops cast math ops cast math ops cast ops convert to tensor ops convert to tensor ops convert to tensor
runtime error value error in it from proto in it from arg s value error is instance all is subclass type error queue close tuple is instance g as graph element ops prep end name scope g as graph element ops prep end name scope g as graph element ops prep end name scope g as graph element ops prep end name scope tuple errors exception type from error code ses s make callable ses s run log v log str coord request stop log error str exceptions raise append ses s run log v log str len format ret thread append thread thread format ret thread append thread thread coord register thread queue name starts with ops strip name scope queue runner def en queue op name append ops strip name scope ops strip name scope ops strip name scope queue runner def queue close exception type extend errors error code from exception type queue runner
super in it ops ones initializer array ops ones like get or make slot with initializer zero slot zero slot call if callable call if callable call if callable call if callable ops convert to tensor ops convert to tensor ops convert to tensor ops convert to tensor get slot get slot get slot train ops apply center rms prop math ops cast math ops cast math ops cast math ops cast train ops apply rms prop math ops cast math ops cast math ops cast math ops cast get slot get slot get slot train ops resource apply center rms prop math ops cast math ops cast math ops cast math ops cast train ops resource apply rms prop math ops cast math ops cast math ops cast math ops cast get slot get slot get slot train ops sparse apply center rms prop math ops cast math ops cast math ops cast math ops cast train ops sparse apply rms prop math ops cast math ops cast math ops cast math ops cast get slot get slot get slot train ops resource sparse apply center rms prop math ops cast math ops cast math ops cast math ops cast train ops resource sparse apply rms prop math ops cast math ops cast math ops cast math ops cast
value error log warn runtime error runtime error build build bulk saver builder value error builder build internal ops prep end name scope ops prep end name scope ops prep end name scope is instance value error value error str value error str checkpoint filename last checkpoints remove last checkpoints append len checkpoints to be delete append last checkpoints pop checkpoints to be delete pop checkpoint management remove checkpoint checkpoint filename log warn str saver def filename tensor name starts with saver def save tensor name starts with saver def restore op name starts with saver def copy from ops strip name scope ops strip name scope ops strip name scope saver list checkpoint filename is instance is instance checkpoint management get checkpoint m times checkpoints with m times append set last checkpoints with time runtime error log warn log warn log warn log warn log warn log warn os path split value error is instance train util global step format os path base name value error is instance type error os path dir name build eager ses s run as str record last checkpoint checkpoint management update checkpoint state internal maybe delete old checkpoints g file is directory value error format checkpoint management meta graph filename export meta graph export meta graph value error as text checkpoint management checkpoint exist internal value error log info build eager ses s run object graph key map wrap restore error with msg log warn saver from object base checkpoint object restore saver restore wrap restore error with msg meta graph add collection def
is instance type error coalesce coalesce coalesce coalesce coalesce coalesce coalesce coalesce coalesce in it fn control flow ops group resources initialize resources scaffold get or default array ops c on cat scaffold get or default array ops c on cat variables report uninitialized variables resources report uninitialized resources scaffold get or default scaffold get or default scaffold get or default is instance train saver saver graph view object graph view log info ops get collection len runtime error ops add to collection control flow ops group resources initialize resources
not implemented error format
value error has at tr session session value error saver restore checkpoint management get checkpoint state log info time sleep checkpoint management get checkpoint state saver restore saver recover last checkpoints restore checkpoint runtime error ses s run in it fn try run local in it op runtime error maybe name model ready runtime error maybe name restore checkpoint try run local in it op log info model ready log info log info float float countdown timer session session try run local in it op model ready safe close errors deadline exceeded error log info time sleep ready ready model ready for local in it log info ses s run log info
chief session creator super
runtime error in it ready op in it in it op in it local in it op in it saver in it summary op in it global step meta graph create meta graph def graph as graph def os path join summary file writer in it session manager session manager mod session manager ops get collection len log info len get first op from collection ops add to collection get first op from collection get first op from collection ops add to collection get first op from collection control flow ops group ops add to collection get first op from collection ops add to collection get first op from collection ops add to collection get first op from collection ops add to collection train util write graph graph as graph def summary writer add graph summary writer add meta graph runtime error log warn train util global step summary writer add session log session log thread append sv summary thread thread append sv step counter thread thread append sv timer checkpoint thread session manager prepare session log info start standard service session manager wait for session log info start queue runners runtime error graph get collection thread extend qr create thread coordinator looper thread coord join summary writer add session log session log coord request stop runtime error train util global step summary writer add summary log warn value error prepare or wait for session request stop stop
super log info max opt compute gradients value error value error distribution strategy extend co locate var s with variable scope variable state ops assign variables report uninitialized variables ops name scope var list append ops device aggregate grad append is instance data flow ops conditional accumulator train ops append grad ac cum apply grad aggregate grad append grad ac cum take grad is instance value error data flow ops sparse conditional accumulator train ops append grad ac cum apply index slice grad aggregate grad append grad ac cum take index slice grad accumulator list append zip ops device ops name scope opt apply gradients ops device ops name scope data flow ops fi fo queue data flow ops fi fo queue ops device ops name scope ops control dependencies state ops assign ops control dependencies array ops fill sync token queue en queue many ops control dependencies ops name scope variable average apply queue runner queue runner ops device chief in it ops append ac cum set global step control flow ops group value error opt get slot opt get slot name value error value error ops device ops name scope array ops fill sync token queue en queue many control flow ops no op sync replicas optimizer hook
sm session manager
ops add to collection
is instance is instance resource variable ops be resource variable type error type error type error
supervisor manage session train step fn
batch
batch join
checkpoint exist internal
learn rate schedule cosine decay decay lr fun c tools partial
learn rate schedule cosine decay restarts decay lr fun c tools partial
get global step value error ops device variable scope get variable g name scope variable scope get variable
do quant ize training on graph def helper graph parse from string
learn rate schedule exponential decay decay lr fun c tools partial
runtime error meta graph export scoped meta graph
log info all model checkpoint paths append len len value error os path is abs os path is abs os path rel path enumerate os path is abs os path rel path checkpoint state
file io get match file m times append file io stat prefix to checkpoint path match maybe append match maybe append
graph get collection len graph get tensor by name log error assert global step
get global step create global step
int int ses s run
import meta graph with return elements
in it from checkpoint in it from checkpoint fn
runtime error ops name scope ops convert to tensor input tensor shape 1 merge with value error random ops random shuffle limit epochs data flow ops fi fo queue q en queue many queue runner add queue runner queue runner queue runner summary scalar math ops cast
learn rate schedule inverse time decay decay lr fun c tools partial
value error ops name scope constant op constant vs variable epochs count up to ops control dependencies array ops identity
learn rate schedule linear cosine decay decay lr fun c tools partial
batch
batch join
shuffle batch
shuffle batch join
math ops exp math ops negative learn rate schedule exponential decay decay lr fun c tools partial
learn rate schedule noisy linear cosine decay decay lr fun c tools partial
ops convert n to tensor ops convert n to tensor ops convert to tensor enumerate math ops cast value error value error learn rate schedule piecewise constant decay decay lr fun c tools partial
learn rate schedule polynomial decay decay lr fun c tools partial
ops name scope math ops range input producer
delete file if exist meta graph filename delete file if exist delete file if exist delete file if exist
is instance server lib cluster spec py dev device spec from string len list log warn round robin strategy six callable type error replica device choose r
py wrap tensor flow t fe py fast path execute s dc a f print eager fallback dispatch dispatch ops raise from not ok status op def library apply op helper dispatch dispatch execute record gradient
py wrap tensor flow t fe py fast path execute s dc a optimizer output make s dc a optimizer eager fallback dispatch dispatch ops raise from not ok status is instance type error len is instance type error len value error len is instance type error len value error len is instance type error len value error len is instance type error len is instance type error len is instance type error len value error len execute make str execute make float execute make float execute make int execute make int execute make boo l op def library apply op helper dispatch dispatch op get at tr op get at tr boo l op get at tr int op get at tr int op get at tr int op get at tr op get at tr op get at tr int op get at tr int execute record gradient s dc a optimizer output make
runtime error is instance type error len execute make float execute make float op def library apply op helper dispatch dispatch
shuffle batch
shuffle batch join
ops name scope ops convert n to tensor or index slice value error array ops shape range input producer array ops gather
runtime error value error is instance type error format ops get collection log warn ops get collection thread extend qr create thread
is instance value error ops name scope ops convert to tensor ops control dependencies control flow ops assert math ops greater array ops size array ops identity input producer
record record iterator event pb 2 event from string
update checkpoint state internal
log info format get group variables get object checkpoint rename six it er items var name to prev var name get prev var name use add var name to voc ab info get voc ab info use add log debug format warm start var with voc ab log debug format len get var info checkpoint utils in it from checkpoint set set log info value error format value error format

is instance value error format is instance d types as d type value error format value error len value error format d types as d type value error format signature def utils classification signature def
is instance separator char join is instance value error format is instance check output key is instance value error format
wrap and check output signature def utils predict signature def
is instance value error format len value error format d types as d type value error format signature def utils regression signature def
collections named tuple wrap and check input tensors wrap and check input tensors is instance value error format six it er items wrap and check input tensors super
collections named tuple value error check tensor serving input receiver super
array ops placeholder parse ops parse example serving input receiver
placeholder s from receiver tensors dic t serving input receiver
value error k war gs pop k war gs pop value error input layer config update input layer config update value error value error input layer len
super api gauge get cell set strategy super super distribute train utils be tpu strategy network be hdf 5 file path value error super k war gs pop k war gs pop k war gs pop set type error value error set optimizer any is instance is instance nest flatten value error value error log warn validate compile param for distribution strategy is instance track track able value error k configure and create distribute session api gauge get cell train utils prepare loss function process target tensor for compile zip training endpoint endpoint create train target train endpoints append train utils prepare loss weight compile eagerly cache output metric attribute handle metrics train utils prepare sample weight modes strategy extend variable create in scope value error has at tr metrics extend metrics extend get metrics from layer len metrics name extend value error value error value error is instance value error train distribute distribution multi worker training loop train distribute distribution multi worker training loop data utils be generator or sequence train utils be eager data set or iterator api gauge get cell log warn k war gs pop type error str check call arg s select train loop fun c fit api gauge get cell check call arg s select train loop fun c evaluate api gauge get cell check call arg s select train loop fun c predict distribute train utils reset metrics check call arg s train utils train on batch train utils non none constant value len not implemented error standardize user data train eager train on batch train utils non none constant value train utils model inputs list list is instance update sample weight modes train function len check call arg s train utils test on batch train utils non none constant value len not implemented error standardize user data train eager test on batch train utils non none constant value train utils model inputs list list update sample weight modes test function len check call arg s train utils predict on batch not implemented error standardize user data train utils cast if float d type is instance len predict function len api gauge get cell fit api gauge get cell check call arg s evaluate api gauge get cell predict full arg spec arg s len full arg spec defaults len positional arg s remove len value error str is instance optimizer s get optimizer s get is instance is instance value error is instance value error loss scale optimizer loss scale optimizer is instance log warn train utils unpack validation data standardize user data not implemented error not implemented error value error value error distribute train utils be distribute by clone value error is instance is instance len len value error len is instance set value error format str t mp target tensors append target tensors get tensor util be tensor type error train utils prepare sample weight modes cache output metric attribute any any update sample weight modes prepare sample weight handle metrics prepare total loss get at tr type error k name scope zip k name scope math ops cast losses utils squeeze or expand dimension has at tr loss fn call losses utils compute weight loss losses utils reduce weight loss loss fn len endpoint output loss metric losses utils scale loss for distribution value error get losses for get losses for losses utils scale loss for distribution math ops add n has at tr has at tr distribution strategy unwrap distributed callback model replicate model set original model is instance inspect is generator value error format track able layer utils filter empty layer containers next train utils get static batch size distribute train utils global batch size support value error format value error format is instance tensor shape as dimension nest flatten data set ops get legacy output shape value error format value error format len len value error format len len len zip endpoint populate sample weight output shape append output shape append train utils collect per output metric info train utils collect per output metric info len add unique metric name compile metric function append enumerate update per output metrics append update per output weight metrics append update per output metrics append set per output metric attribute update per output weight metrics append set per output metric attribute len metrics module mean k name scope train utils call metric function metric result append len k name scope range len metric result extend handle per output metrics metric result extend handle per output metrics has at tr len len log log first n is instance value error get at tr set trainable state is instance k name scope optimizer get update get update for get update for has at tr k name scope k function set at tr set trainable state get at tr has at tr k name scope k function set at tr has at tr get at tr k name scope k function not implemented error distribute train utils be tpu strategy not implemented error is instance train utils verify data set shuffle nest flatten is instance train utils list to tuple train utils list to tuple train utils list to tuple strategy extend experimental make num py data set ds shuffle max ds repeat distribute train utils be tpu strategy ds batch is instance train utils validate data set input is instance train utils validate data set input train utils verify data set shuffle train utils extract tensors from data set is instance train utils validate data set input train utils unpack iterator input train utils check step argument build model with input is instance compile from input any be symbolic tensor standardize tensors is instance train utils standardize input data is instance data set ops get structure is instance nest flatten nest flatten zip convert x append convert sci py sparse tensor nest pack sequence as is instance has at tr has at tr tensor spec tensor spec type spec type spec from value nest map structure nest flatten nest flatten zip nest assert same structure train utils prepare sample weight modes train utils standardize input data train utils standardize sample weight train utils standardize class weight train utils standardize weight zip train utils check array lengths train utils check loss and target compatibility train utils handle partial sample weight value error str is instance dic t zip is instance train utils extract tensors from data set train utils validate input type is instance list is instance sort process input append composite tensor utils be composite or composite value value error is instance train utils cast if float d type tensor spec tensor spec nest map structure train utils have tensors train utils cast if float d type set input train utils have tensors train utils cast if float d type and mismatch train utils validate input type is instance list all input append any tensor util be tensor all tensor util be tensor value error str str is instance is instance be symbolic tensor compile set input at trs set output at trs value error tensor util be tensor tuple is instance tuple is instance train utils be feature layer value error tuple maybe cast input train utils model inputs model input get symbolic input k be placeholder fee input name append fee input append fee input shape append k int shape nest flatten train utils generic output name has at tr has at tr train state maybe load initial epoch from ck pt metrics extend get at tr metrics extend get at tr runtime error model serialization model saved model saver
super is instance utils assert no legacy layer add super is instance any has at tr is instance is instance type error str utils assert no legacy layer layer attribute sentinel add parent is instance len nest flatten train utils get input shape and d type input layer input layer len nest flatten value error nest flatten layer utils get source input layer len nest flatten type error in it graph network layer append track layer inspect get full arg spec type error layer call arg specs pop in it graph network in it graph network value error tuple super in it graph network super layer layer compute output shape call predict log warn predict pro ba arg max as type layer config s append generic utils serialize object is instance copy deep copy config get cls layer module de serialize model add model build has at tr model serialization sequential saved model saver
de serialize object
k elu
math ops exp
is instance str de serialize callable is instance de serialize object type error format re pr
k hard s igm oid

k relu
nn s elu
has at tr serialize object
nn s igm oid
k n dim nn soft max math ops exp math ops reduce max math ops reduce sum value error
nn soft plus
nn soft sign
nn tan h










































name scope array ops placeholder with default graph variables pop graph t f optimizer s pop free z able var s pop


collections default dic t

is instance value error str type has at tr

list range len array ops transpose nest map structure nest flatten array ops shape input shape with rank at least math ops cast len expand dim swap batch time step nest be sequence value error nest be sequence value error len len range array ops expand dim array ops tile value error tuple array ops un stack nest be sequence nest map structure process single input t nest pack sequence as array ops un stack range get input tensor step function tuple tuple expand mask zero like array ops where nest flatten nest flatten tuple expand mask tuple array ops where zip nest pack sequence as successive output append successive state append array ops stack array ops where expand mask zero like array ops where expand mask zero like range get input tensor step function tuple tuple successive output append successive state append array ops stack tuple tuple tensor array ops tensor array enumerate tuple ta un stack ta un stack reverse zip nest pack sequence as step function tuple tuple tuple tensor array ops tensor array enumerate nest flatten constant op constant control flow util graph or parents in x la context math ops reduce max reverse tensor array ops tensor array mask ta un stack mask ta read tuple expand mask len tuple array ops where zip is instance math ops reduce max math ops subtract math ops less math ops greater tuple array ops where zip tuple array ops zero like nest flatten tuple ta read nest pack sequence as mask fn step function tuple tuple nest flatten nest flatten compute mask output nest flatten nest flatten zip is instance new state set shape compute mask output nest pack sequence as tuple ta write zip tuple tuple control flow ops while loop tuple ta read nest pack sequence as step function tuple tuple nest flatten nest flatten zip is instance new state set shape nest flatten tuple ta write zip nest pack sequence as tuple control flow ops while loop tuple tuple nest pack sequence as nest pack sequence as is instance output set shape nest map structure nest map structure

value error str str
value error str str
super set log get log get
super file io file exist open boo l len io open is instance is instance is instance join map sort dic t unicode csv dic t writer collections ordered dic t row dic t update handle value writer write row
on batch begin on batch end
super abs log warn get monitor value monitor op model set weight log get log warn join list
epoch append history set default
super dic t update
super has at tr value error float k get value schedule schedule is instance value error is instance value error k set value k get value k get value
super log warn log warn log warn monitor starts with is instance value error format train state multi worker training state get most recently modify file match pattern train state checkpoint exist model load weight value error format get at tr is instance log get save model save model save model train state back up is instance get file path log get log warn monitor op model save weight model save model save weight model save io error format file path format os path split ext os path join file io delete recursively os path dir name os path base name re sub checkpoint management latest checkpoint re match os path base name file io file exist os list dir re match os path join os path get m time
super value error str set prog bar log get log get log value append prog bar update log value append prog bar update
super value error k war gs pop log warn log warn np less np greater k get value log get log warn join list monitor op float k get value max k set value
super import error request post request post json dump log warn str
super validate k war gs k war gs get log warn k war gs get log warn k war gs get log warn k war gs get log warn set value error str distribute file utils write dir path get writer summary ops graph summary ops model import error is instance is instance embedding s metadata pop value error str dummy writer projector visualize embedding s six it er values os path join summary ops create file writer math ops equal get writer summary ops set step variables variable variables variable is instance step assign add summary ops trace on set default writer log metrics increment step math ops equal increment step set default writer log metrics log weight log embedding s distribute file utils remove temp dir path summary ops trace on get writer k get value summary ops trace export os path join name starts with name len validation prefix len log by writer writer name append get writer summary ops scalar get writer weight name replace k get value summary ops histogram log weight as image array ops squeeze k int shape len array ops reshape len array ops transpose k int shape array ops reshape len array ops transpose k int shape array ops reshape k int shape len summary ops image os path join format model save weight
log get np isn an np is inf

k sqr t math ops reduce sum math ops square k clip
k sqr t math ops reduce sum math ops square k clip
math ops cast math ops greater equal
value error k reshape k map fn k stack array ops un stack k reshape k stack array ops un stack k constant k shape k cast k switch k cast math ops floor mod k zero k switch k cast math ops floor mod k constant k constant k less array ops pad control flow ops while loop tensor shape tensor shape
k sqr t math ops reduce sum math ops square
is instance de serialize is instance str de serialize callable value error str
get file np load np random seed np a range len np random shuffle np array x int len x 1 test split int len np array y int len x 1 test split int len np array x int len x 1 test split int len np array y int len x 1 test split int len
get file np empty np empty range os path join str load batch os path join load batch np reshape len np reshape len x train transpose x test transpose x test as type y test as type
value error get file os path join load batch os path join load batch np reshape len np reshape len x train transpose x test transpose
os path join paths append get file gzip open np from buffer gzip open np from buffer len gzip open np from buffer gzip open np from buffer len
get file open json load
log warn k war gs pop type error str get file np load np random seed np a range len np random shuffle np a range len np random shuffle np concatenate np concatenate remove long seq value error str max max len np array np array np array np array
get file np load
get file open json load
log warn k war gs pop type error str get file np load np random seed np a range len np random shuffle remove long seq max max int len np array np array np array np array
not implemented error model to est i amt or usage gauge get cell lib model to estimator
np is scalar is instance type error type d types as d type constant op constant
super
super
assert float d type len value error lina lg ops i mpl eye array ops slice
config pop cls
d types as d type value error array ops ones
random generator assert float d type len value error max min random generator random normal gen lina lg ops qr array ops dia g part math ops sign array ops matrix transpose array ops reshape
random generator assert float d type random generator random normal
random generator d types as d type value error random generator random uniform
random generator assert float d type random generator truncate normal
value error value error value error random generator assert float d type compute fan max max max math sqr t random generator truncate normal math sqr t random generator random normal math sqr t random generator random uniform
d types as d type array ops zero
get at tr dir de serialize object
is instance de serialize is instance str de serialize de serialize callable value error str
not implemented error not implemented error not implemented error generate zero fill state for cell
super activation s get activation activation s serialize super dic t list list
super regularize rs l 1 l 2 super dic t list list
range len
super tensor shape tensor shape is instance add weight super array ops expand dim array ops expand dim math ops reduce sum math ops tan h super dic t list list
super array ops shape get noise shape math ops greater equal k random uniform math ops cast k in train phase super dic t list list
super add weight super math ops mat mul super dic t list list
range len len
super fun c tools partial
super
super
normalization replace in base doc string
is instance value error format is instance value error format value error recreate layer from config recreate layer from config get at tr force zero output for mask force zero output for mask len super value error get at tr get at tr value error format inspect get full arg spec get at tr get at tr layer class from config layer class from config forward layer compute output shape is instance tensor shape tensor shape tuple list tuple copy copy copy copy copy copy standardize arg s is instance len super len value error str input spec k int shape input spec k int shape len k be tensor k be tensor value error range len nest flatten super super generic utils have arg generic utils have arg generic utils have arg generic utils have arg is instance len len len forward layer backward layer forward layer backward layer k reverse k concatenate value error k name scope forward layer build k name scope backward layer build is instance is instance has at tr constraints update constraints update has at tr super dic t list list config pop config pop de serialize layer super
super is instance len value error all list range len shape set add tuple len set len len value error range set len value error k concatenate is instance value error list tuple is instance value error is instance value error len len value error all zip mask append array ops ones like k n dim k n dim mask append array ops expand dim mask append k concatenate k all super dic t list list
super activation s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get
super activation s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get
super activation s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get conv utils normalize tuple zip value error str str tensor shape tensor shape len value error str value error int input spec add weight add weight array ops shape conv utils de conv output length conv utils de conv output length array ops stack backend conv 2 d transpose compute output shape output set shape nn bias add conv utils convert data format activation tensor shape tensor shape list conv utils de conv output length conv utils de conv output length tensor shape tensor shape super
super activation s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get
super activation s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get conv utils normalize tuple zip value error str str tensor shape tensor shape len value error str value error str int input spec add weight add weight array ops shape conv utils de conv output length conv utils de conv output length conv utils de conv output length array ops stack nn conv 3 d transpose conv utils convert data format compute output shape output set shape nn bias add conv utils convert data format activation tensor shape tensor shape list conv utils de conv output length conv utils de conv output length conv utils de conv output length tensor shape tensor shape super config pop
conv lstm 2 d cell k war gs get super regularize rs get maybe reset cell dropout mask super activation s serialize activation s serialize initializer s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize constraints serialize super dic t list list cls
super conv utils normalize tuple input spec tensor shape tensor shape tensor shape tensor shape super dic t list list
super conv utils normalize data format is instance has at tr len value error str conv utils normalize tuple conv utils normalize tuple value error str input spec tensor shape tensor shape tensor shape tensor shape tensor shape tensor shape super dic t list list
super conv utils normalize data format is instance has at tr len value error str conv utils normalize tuple conv utils normalize tuple conv utils normalize tuple value error str input spec tensor shape tensor shape tensor shape tensor shape tensor shape tensor shape super dic t list list
k war gs pop super regularize rs get int is instance activation s get initializer s get initializer s get regularize rs get regularize rs get constraints get constraints get input spec d types as d type type error tensor shape tensor shape tensor shape dimension value value error tensor shape dimension value input spec add weight add weight len standard ops tensor dot output set shape math ops cast k be sparse sparse ops sparse tensor dense mat mul gen math ops mat mul nn bias add activation tensor shape tensor shape input shape with rank at least tensor shape dimension value value error input shape 1 concatenate activation s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize super dic t list list
super fc state manager imp lv 2 ops name scope column create state super
super initializer s get regularize rs get constraints get initializer s get len value error str tensor shape tensor shape value error int add weight add weight input spec backend depth wise conv 2 d backend bias add activation conv utils conv output length conv utils conv output length super config pop config pop config pop config pop initializer s serialize regularize rs serialize constraints serialize
super is instance is instance type error len value error is instance is instance value error is instance len value error is instance len len value error len value error is instance k n dim k n dim range len ax append k n dim ax append nn l 2 normalize nn l 2 normalize k batch dot is instance len value error list list is instance len len shape 1 pop shape 2 pop shape 2 pop len tuple super dic t list list
super array ops shape enumerate noise shape append ops convert to tensor nn dropout get noise shape utils smart cond array ops identity super dic t list list
super k cast to float x k elu float super dic t list list
k war gs pop super initializer s get regularize rs get regularize rs get constraints get ops device add weight add weight math ops not equal is instance list len len value error str str enumerate zip value error str str tuple k d type math ops cast embed ops embed lookup initializer s serialize regularize rs serialize regularize rs serialize constraints serialize super dic t list list
super conv utils normalize data format input spec k n dim k n dim permutation extend range k n dim permutation append array ops transpose tensor shape dimension value np prod np i info array ops reshape constant op constant tensor shape dimension value np i info array ops reshape constant op constant array ops reshape array ops shape output set shape compute output shape tensor shape as shape tensor shape tensor shape all np prod tensor shape tensor shape super dic t list list
k war gs pop super super all is instance k convert input if rag validate arg s if rag process input is instance k int shape maybe reset cell dropout mask cell call k rnn runtime de fun gru call state ops assign add update k maybe convert to rag list get dropout mask for cell normal gru k war gs update be sequence right pad cudnn gru standard gru gru with backend selection
super
super np sqr t k random normal array ops shape k in train phase super dic t list list
super k random normal array ops shape k in train phase super dic t list list
super math ops cast array ops expand dim backend sum math ops reduce sum backend mean
backend mean backend mean
backend mean backend mean
backend max
backend max backend max
distribute train utils global batch size support value error format k war gs pop value error value error str backend get u id backend d type value error super is instance tuple is instance tuple backend placeholder utils be symbolic tensor value error tuple base layer ker as history node module node layer serialization input layer saved model saver
d types as d type len int type error max value error format str str str str str str join cls
k war gs pop super input spec k convert input if rag validate arg s if rag process input is instance k int shape maybe reset cell dropout mask cell call k rnn runtime get dropout mask for cell normal lstm k war gs update be sequence right pad cudnn lstm standard lstm lstm with backend selection range len update append state ops assign add update k maybe convert to rag list
super
super inspect get full arg spec super not implemented error callable output shape utils convert shape utils convert shape nest flatten tensor shape tensor shape utils convert shape nest map structure next creator create variables append back prop gradient tape variable scope variable creator scope function check variables set join format text wrap de dent value error join format warn text wrap de dent log warn callable mask serialize function to config serialize function to config serialize function to config config update super dic t list list is instance generic utils fun c dump callable value error type cls parse function from config cls parse function from config cls parse function from config is instance np array cls config pop globs update warn warn format globs update config pop generic utils de serialize object generic utils fun c load type error
frozen set it er tools chain generic utils validate k war gs in it set name k war gs pop maybe create attribute maybe create attribute set d type policy k war gs get maybe create attribute tuple tuple trainable weight append base layer utils track able weight handler non trainable weight append base layer utils track able weight handler type error k war gs pop k war gs pop k war gs pop k war gs pop d types as d type policy policy initializer s get regularize rs get constraints get value error value error old get ter auto cast variable create auto cast variable log warn add variable with custom get ter backend track variable variable name variable name find ' ' variable name find handle weight regular iz ation trainable weight append non trainable weight append inspect get full arg spec has at tr has at tr policy serialize has at tr all arg s remove len has at tr not implemented error cls maybe build fun c graph fun c graph utils convert shape nest map structure not implemented error nest map structure is instance type error format nest map structure compute output shape nest flatten nest map structure tensor spec tensor spec any nest flatten type error str nest flatten utils be all symbolic tensors any is instance is instance ops convert to tensor nest map structure nest flatten collect input mask call arg be pass call arg be pass get call arg value k war gs pop tensor util be tensor math ops cast boo l base layer utils need history base layer utils create history call context enter input spec assert input compatibility any is instance value error backend name scope maybe build maybe cast input base layer utils be sub classed base layer utils from save model autograph convert base layer utils auto cast context manager call fn base layer utils mark as return call fn type error str symbolic call value error base layer utils have all metadata k war gs pop k war gs pop set connectivity metadata handle activity regular iz ation set mask metadata has at tr set input backend name scope maybe build maybe cast input base layer utils auto cast context manager call handle activity regular iz ation set mask metadata get at tr nest flatten is instance type error format gather children attribute ded up weight gather children attribute gather children attribute ded up weight callable base layer utils check graph consistency base layer utils check graph consistency update append gather children attribute collect losses extend collect losses extend collect losses append gather children attribute callable base layer utils auto cast context manager tensor util be tensor ops convert to tensor nest flatten callable callable losses append fun c tools partial tensor util be tensor ops convert to tensor utils be symbolic tensor symbolic losses append tag unconditional base layer utils check graph consistency tensor util be tensor eager losses append tag unconditional callable losses extend value error eager losses extend losses append get at tr graph network add loss losses append has at tr track able layer utils filter empty layer containers gather children attribute value error has at tr utils be symbolic tensor value error symbolic add metric eager add metric value error str get at tr symbolic add metric value error graph network add metric runtime error generic utils to list callable get at tr callable process update is instance has at tr ops convert to tensor utils get reachable from input process update callable update extend is instance len value error len str is instance param set weight ref shape be compatible with value error weight value tuples append backend batch set value is instance output weight extend output weight append backend batch get value nest flatten utils get reachable from input nest flatten utils get reachable from input get input at is instance get at tr get at tr get output at is instance get at tr get at tr is instance get at tr get at tr is instance get at tr get at tr get node attribute at index get node attribute at index get node attribute at index get node attribute at index attribute error get node attribute at index attribute error get node attribute at index attribute error set str len attribute error str get at tr utils maybe in it scope maybe build value error int sum np prod attribute error set str len attribute error call add weight is instance is instance policy de serialize policy policy d types as d type d types as d type is instance warn about input cast math ops cast is instance tensor spec tensor spec nest map structure get at tr log warn format d types as d type policy policy backend unique object name generic utils to snake case len value error format len get at tr get exist metric match base layer utils create mean metric metrics append base layer utils check graph consistency get exist metric has at tr metrics append value error match base layer utils create mean metric metrics append backend name scope regularize r is instance add loss fun c tools partial add loss fun c tools partial nest flatten backend name scope activity regularize r math ops cast array ops shape base layer utils check graph consistency add loss nest flatten get at tr all get at tr has at tr get at tr get at tr compute mask nest flatten zip utils be all symbolic tensors get at tr call arg be pass get call arg value nest map structure get at tr generic utils be all none dic t zip dic t zip nest flatten object identity object identity set nest flatten backend name scope array ops identity output ls copy append nest pack sequence as dic t zip arguments update add inbound node nest map structure nest map structure nest map structure node module node enumerate nest flatten ker as history len runtime error len value error str str len get at tr is instance len input spec assert input compatibility nest flatten policy policy all has at tr nest map structure has at tr utils maybe in it scope build get at tr set weight nest map structure compute output shape backend placeholder nest map structure track able layer utils filter empty layer containers trainable state update track able layer utils filter empty layer containers layer set trainable state maybe create attribute has at tr super get at tr super super super is instance track able layer utils have weight super is instance super super get at tr has at tr super attribute error format data structure sticky attribute assignment reference count get del at tr is instance track able layer utils have weight maybe create attribute any layer append has at tr value attribute sentinel add parent has at tr nest flatten is instance is instance maybe create attribute maybe create attribute any trainable weight append any non trainable weight append backend track variable super has at tr track able layer utils filter empty layer containers list it er tools chain from it er able get at tr class call full arg spec f get cache pop class call fn arg s f get cache pop class call accept k war gs f get cache pop inspect get full arg spec get at tr has at tr output append see weight add layer serialization layer saved model saver track able save model saver list extra dependencies for serialization track able save model saver list function for serialization state pop object set at tr
super is instance is instance value error initializer s get initializer s get regularize rs get regularize rs get constraints get constraints get sort len len value error is instance is instance list enumerate value error len len set value error format tuple add weight add weight fuse can be use len len array ops reshape nn moments broadcast broadcast nn batch normalization sort array ops shape range array ops reshape array ops fill constant op constant set const tensor set const tensor nn fuse batch norm array ops reshape broadcast broadcast output set shape initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize super dic t list list
super k cast to float x k relu float super dic t list list
super conv utils normalize tuple conv utils normalize tuple conv utils normalize pad value error conv utils normalize data format activation s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get input spec value error conv utils conv output length add weight add weight get locally connected mask sort conv utils conv kernel id xs add weight len value error add weight input spec input spec conv utils conv output length k local conv local conv mat mul compute output shape local conv sparse mat mul compute output shape value error k bias add activation activation s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize super dic t list list
super conv utils normalize tuple conv utils normalize tuple conv utils normalize pad value error conv utils normalize data format activation s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get input spec value error str conv utils conv output length conv utils conv output length add weight add weight get locally connected mask sort conv utils conv kernel id xs add weight len value error add weight input spec input spec conv utils conv output length conv utils conv output length k local conv local conv mat mul compute output shape local conv sparse mat mul compute output shape value error k bias add activation activation s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize super dic t list list
super k any math ops not equal k any math ops not equal math ops cast array ops squeeze super dic t list list
super fun c tools partial
super
super
range len math ops maximum
range len math ops minimum
range len
super initializer s get regularize rs get constraints get is instance list list add weight range len input spec len k relu k relu initializer s serialize regularize rs serialize constraints serialize super dic t list list
super tuple sort list range len value error input spec len tensor shape tensor shape copy copy enumerate tensor shape tensor shape array ops transpose super dic t list list
is instance stacked rnn cells has at tr value error has at tr value error k war gs pop k war gs pop k war gs pop super value error nest map structure nest be sequence is instance tensor shape as shape nest flatten be multiple state tensor shape as shape tensor shape as shape tensor shape as shape tensor shape as shape get at tr nest flatten nest map structure len get output shape tensor shape as shape tensor shape as shape nest map structure generic utils to list nest flatten nest flatten is instance is instance list input spec tuple is instance tuple tensor shape as shape nest be sequence get input spec get input spec get step input shape nest map structure generic utils to list nest map structure nest map structure is instance cell build be multiple state list validate state spec input spec tensor shape as shape value error format nest flatten nest flatten len len range len tensor shape tensor shape tensor shape tensor shape get at tr nest be sequence nest flatten array ops shape get initial state fn generate zero fill state nest be sequence list standardize arg s super nest map structure input spec k int shape input spec k int shape len nest flatten k be tensor k be tensor value error generic utils to list nest map structure super input spec len additional specs len super k convert input if rag validate arg s if rag process input maybe reset cell dropout mask is instance maybe reset cell dropout mask nest flatten nest be sequence k int shape nest flatten k int shape value error generic utils have arg get at tr generic utils have arg value error len cell call nest be sequence len cell call nest be sequence k rnn zip nest flatten nest flatten update append state ops assign add update k maybe convert to rag is instance list generic utils to list is instance is instance len math ops add n math ops count nonzero nest flatten control flow ops cond get initial state len len value error str len str len value error str value error is instance attribute error nest flatten value error nest flatten k zero tensor shape as shape nest map structure nest be sequence zip nest flatten nest flatten k set value np zero tensor shape as shape nest flatten nest flatten len len value error str len str len str enumerate zip value error str str str set value tuples append k batch set value super dic t list list de serialize layer config pop config pop cls
super value error str value error str k cast to float x k cast to float x k cast to float x k relu super dic t list list
super input spec tensor shape tensor shape tensor shape tensor shape k repeat super dic t list list
super tuple list enumerate value error np prod value error value error tensor shape tensor shape tuple fix unknown dimension tensor shape tensor shape array ops reshape array ops shape super dic t list list
super activation s get initializer s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get regularize rs get constraints get constraints get constraints get array ops pad array ops expand dim array ops expand dim array ops expand dim nn separable conv 2 d conv utils convert data format nn bias add conv utils convert data format array ops squeeze activation
super activation s get initializer s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get regularize rs get constraints get constraints get constraints get nn separable conv 2 d conv utils convert data format nn bias add conv utils convert data format activation
k war gs pop log warn simple rnn cell k war gs get k war gs get super regularize rs get input spec maybe reset cell dropout mask super activation s serialize initializer s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize constraints serialize super dic t list list config pop cls
k war gs pop super activation s get initializer s get initializer s get initializer s get regularize rs get regularize rs get regularize rs get constraints get constraints get constraints get min max min max cache device add weight add weight add weight get dropout mask for cell get recurrent dropout mask for cell k dot k dot k bias add k dot activation generate zero fill state for cell activation s serialize initializer s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize regularize rs serialize constraints serialize constraints serialize constraints serialize super dic t list list
super k soft max super dic t list list
super input spec array ops shape
super value error input spec array ops shape
super value error input spec array ops shape
has at tr value error has at tr value error k war gs pop log warn super tuple get at tr be multiple state get at tr initial state append get initial state fn initial state append generate zero fill state for cell tuple nest pack sequence as nest flatten zip nest be sequence get at tr len generic utils have arg k war gs pop generic utils have arg cell call cell call new nest state append nest pack sequence as nest flatten is instance is instance cell build get at tr be multiple state tuple tensor shape as shape cells append super dic t list list config pop cells append de serialize layer cls
super len value error len value error
super k cast to float x math ops cast math ops greater float super dic t list list
is instance value error format super layer utils be built in layer get at tr k int shape any tuple k shape list enumerate tuple tensor shape tensor shape len value error str input spec super tuple tensor shape tensor shape tensor shape tensor shape layer compute output shape is instance tensor shape tensor shape tensor shape tensor shape generic utils have arg k int shape k convert input if rag layer k rnn k maybe convert to rag is instance layer rag tensor ragged tensor from row lengths array ops shape get shape tuple generic utils object list u id array ops reshape generic utils have arg get shape tuple k reshape layer compute output shape get shape tuple array ops reshape k int shape get shape tuple k reshape generic utils object list u id input map get layer compute mask range len k int shape k any k shape k int shape k int shape k compute output shape get shape tuple k reshape
super int input spec tensor shape tensor shape tensor shape tensor shape backend repeat elements super dic t list list
super conv utils normalize data format conv utils normalize tuple value error input spec tensor shape tensor shape tensor shape tensor shape tensor shape tensor shape backend resize image super dic t list list
conv utils normalize data format conv utils normalize tuple input spec super tensor shape tensor shape tensor shape tensor shape tensor shape tensor shape backend resize volumes super dic t list list
is instance super layer build has at tr super dic t list list de serialize layer config pop cls
super conv utils normalize tuple input spec tensor shape tensor shape backend temporal pad super dic t list list
super conv utils normalize data format is instance has at tr len value error str conv utils normalize tuple conv utils normalize tuple value error str input spec tensor shape tensor shape tensor shape tensor shape tensor shape tensor shape backend spatial 2 d pad super dic t list list
super conv utils normalize data format is instance has at tr len value error str conv utils normalize tuple conv utils normalize tuple conv utils normalize tuple value error str input spec tensor shape tensor shape tensor shape tensor shape tensor shape tensor shape backend spatial 3 d pad super dic t list list
add
average
concatenate
de serialize object
dot
maximum
minimum
multiply
serialize object
subtract

super
super
super
super
super
super
super
super
losses utils reduction v 2 validate utils graph context for symbolic tensors k name scope call losses utils compute weight loss cls not implemented error value error
super
super
super
super
super
value error
super
super
ops convert to tensor math ops cast math ops reduce sum math ops reduce max math ops maximum
nn l 2 normalize nn l 2 normalize math ops reduce sum
de serialize object
is instance str de serialize is instance de serialize callable value error
serialize object
is instance list value error format list is instance list value error format list len sort value error range is instance metrics utils auc curve from str is instance metrics utils auc summation method from str super constant op constant check ops assert non negative control flow ops with dependencies build value error tensor shape tensor shape tensor shape dimension tensor shape tensor shape tensor shape dimension add weight add weight add weight add weight k initialize variables build shape extend shape append check ops assert shape ops control dependencies metrics utils update confusion matrix variables math ops div no nan math ops maximum math ops multiply array ops where math ops logical and math ops div no nan math ops maximum array ops ones like math ops reduce sum math ops div no nan math ops log math ops maximum math ops div no nan math ops div no nan math ops div no nan math ops minimum math ops maximum math ops multiply math ops reduce sum math ops reduce mean math ops div no nan math ops reduce sum math ops multiply math ops reduce sum math ops reduce sum math ops multiply k batch set value np zero be tensor or variable k e val super dic t list list
super
super
super
super
super
super
super
super
super
super
super
super
super
super
super
super add weight math ops cast math ops cast array ops reshape array ops reshape array ops reshape confusion matrix confusion matrix total cm assign add math ops cast math ops reduce sum math ops cast math ops reduce sum math ops cast array ops dia g part math ops reduce sum math ops cast math ops not equal math ops div no nan math ops div no nan math ops reduce sum k set value np zero super dic t list list
super math ops cast math ops cast math ops cast metrics utils rag assert compatible and get flat value losses utils squeeze or expand dimension confusion matrix remove s que ez able dimension y p red shape assert be compatible with math ops div no nan math ops abs super k e val be tensor or variable super dic t list list
super
super
super tensor shape tensor shape add weight add weight k initialize variables math ops cast build value error format array ops ones like math ops cast losses utils squeeze or expand dimension weight broadcast ops broadcast weight k n dim k n dim math ops reduce mean list range math ops multiply math ops multiply total assign add ops control dependencies count assign add value error math ops div no nan k batch set value np zero
super d types as d type super def function function type method type metrics utils update state wrapper type method type metrics utils result wrapper update state ops control dependencies distribute train utils call replica local fn k batch set value not implemented error not implemented error distribute train utils be tpu strategy super
super
super metrics utils parse in it thresholds add weight len add weight len metrics utils update confusion matrix variables math ops div no nan len len to list k batch set value np zero super dic t list list
value error super math ops div no nan math ops arg min math ops abs math ops cast math ops div no nan super dic t list list
super metrics utils parse in it thresholds add weight len add weight len metrics utils update confusion matrix variables math ops div no nan len len to list k batch set value np zero super dic t list list
super math ops cast math ops cast losses utils squeeze or expand dimension math ops square difference super math ops sqr t math ops div no nan
value error super math ops div no nan math ops arg min math ops abs math ops cast math ops div no nan super dic t list list
super
super
super
value error super math ops div no nan math ops arg min math ops abs math ops cast math ops div no nan super dic t list list
super
super
super
super
super
math ops cast math ops cast k mean math ops equal
ops convert to tensor math ops cast ops convert to tensor smart cond smart cond k mean k binary cross entropy
math ops cast math ops equal math ops arg max math ops arg max
ops convert to tensor math ops cast ops convert to tensor math ops cast array ops shape smart cond smart cond k categorical cross entropy
de serialize object
is instance de serialize is instance de serialize str callable value error
ops convert to tensor math ops cast maybe convert label k mean math ops maximum
ops convert to tensor math ops cast k mean math ops abs
ops convert to tensor math ops cast math ops abs k maximum math ops abs k mean
ops convert to tensor math ops cast k mean math ops square difference
ops convert to tensor math ops cast math ops log k maximum math ops log k maximum k mean math ops square difference
ops convert to tensor math ops cast k mean math ops log
serialize object
ops convert to tensor ops convert to tensor len k int shape len k int shape array ops squeeze math ops arg max k d type k d type math ops cast k d type math ops cast math ops equal
k sparse categorical cross entropy
ops convert to tensor ops convert to tensor len k int shape len k int shape array ops squeeze math ops cast nn in top k math ops cast
ops convert to tensor math ops cast maybe convert label k mean math ops square math ops maximum
math ops cast nn in top k math ops arg max
is instance clone sequential model clone functional model
is instance h 5 py be hdf 5 hdf 5 format load model from hdf 5 is instance loader i mpl parse save model save model load load io error
is instance type error de serialize
json load de serialize
import error yam l load de serialize
is instance os path split ext is instance not implemented error hdf 5 format save model to hdf 5 save model save save
super set hyper k war gs get set hyper set hyper add slot add slot super apply state var device var d type update dic t ops convert to tensor array ops identity get hyper len len np array super get fallback apply state get slot get slot train ops resource apply ada delta get fallback apply state get slot get slot train ops resource sparse apply ada delta super config update serialize hyper parameter serialize hyper parameter serialize hyper parameter
value error super set hyper k war gs get set hyper in it ops constant initializer add slot super apply state var device var d type update dic t ops convert to tensor array ops zero len len np array super config pop cls get fallback apply state get slot train ops resource apply ada grad get fallback apply state get slot train ops resource sparse apply ada grad super config update serialize hyper parameter serialize hyper parameter
super set hyper k war gs get set hyper set hyper set hyper add slot add slot add slot super math ops cast array ops identity get hyper array ops identity get hyper math ops pow math ops pow math ops sqr t apply state var device var d type update dic t ops convert to tensor int len len weights len params len super get fallback apply state get slot get slot train ops resource apply adam get slot train ops resource apply adam with ams grad get fallback apply state get slot state ops assign ops control dependencies resource scatter add get slot state ops assign ops control dependencies resource scatter add math ops sqr t state ops assign sub control flow ops group get slot math ops maximum ops control dependencies state ops assign math ops sqr t state ops assign sub control flow ops group super config update serialize hyper parameter serialize hyper parameter serialize hyper parameter serialize hyper parameter
super set hyper k war gs get set hyper set hyper set hyper add slot add slot super math ops cast array ops identity get hyper array ops identity get hyper math ops pow apply state var device var d type update dic t ops convert to tensor array ops zero get fallback apply state get slot get slot train ops resource apply ada max get fallback apply state get slot array ops gather ops control dependencies resource scatter update get slot array ops gather math ops maximum math ops abs ops control dependencies resource scatter update ops control dependencies resource scatter add control flow ops group super config update serialize hyper parameter serialize hyper parameter serialize hyper parameter serialize hyper parameter
super value error value error value error value error value error set hyper set hyper set hyper set hyper set hyper in it ops constant initializer add slot add slot super apply state var device var d type update dic t array ops identity get hyper array ops identity get hyper array ops identity get hyper math ops cast get fallback apply state get slot get slot train ops resource apply f trl train ops resource apply f trl get fallback apply state get slot get slot train ops resource sparse apply f trl train ops resource sparse apply f trl super config update serialize hyper parameter serialize hyper parameter serialize hyper parameter serialize hyper parameter serialize hyper parameter
k war gs pop k war gs get is instance value error super set hyper k war gs get set hyper set hyper set hyper add weight weight append add slot add slot array ops identity get hyper array ops identity get hyper array ops identity get hyper math ops cast math ops cast math ops cast math ops pow math ops pow math ops cast array ops identity state ops assign dic t ops convert to tensor math ops pow array ops identity super get fallback apply state get slot get slot state ops assign math ops square state ops assign math ops sqr t state ops assign get fallback apply state get slot get slot state ops assign ops control dependencies resource scatter add array ops gather state ops assign ops control dependencies resource scatter add array ops gather math ops sqr t resource scatter add control flow ops group super config update serialize hyper parameter serialize hyper parameter serialize hyper parameter serialize hyper parameter
type error str value error format in it set name k war gs pop value error format k war gs pop k war gs pop compute gradients apply gradients callable tape watch callable nest flatten backend name scope tape gradient has at tr clip ops clip by norm has at tr clip ops clip by value list zip assert valid d types nest flatten backend name scope gradients gradients zip value error format has at tr clip ops clip by norm has at tr clip ops clip by value filter grads backend name scope create slot prepare fun c tools partial distribution extend batch reduce to zip is instance not implemented error is instance runtime error resource apply sparse duplicate indices resource apply dense ops control dependencies var assign var constraint backend name scope backend name scope distribution extend co locate var s with update ops extend distribution extend update any is instance utils be symbolic tensor ops get graph from input ops control dependencies iterations assign add iterations assign add get gradients list zip assert valid d types apply gradients is instance track track able callable is instance is instance backend set value is instance callable math ops cast super get hyper has at tr set hyper super slot name append var key slot set default slot dic t get is instance callable initializer s get fun c tools partial strategy extend variable create in scope value error format strategy extend co locate var s with variables variable backend track variable restore slot variable weight append var key get at tr key add ops device prepare local array ops identity decay lr prepare local sort is instance callable add weight add weight weight append runtime error weight append get hyper is instance math ops cast math ops cast lr t math ops cast get hyper has at tr has at tr config pop is instance learn rate schedule de serialize cls is instance learn rate schedule serialize callable tensor util be tensor backend get value backend batch get value len len value error str len str len str backend batch get value zip value error str str weight value tuples append backend batch set value is instance callable initializer s get value error add variable with custom get ter backend track variable backend unique object name generic utils to snake case value error set callable de duplicate index slice resource apply sparse ops control dependencies resource variable ops resource scatter add ops control dependencies resource variable ops resource scatter update inspect get full arg spec inspect get full arg spec var key defer slot restorations get defer restorations sort checkpoint position restore var key slot get slot dic t get track able checkpoint initial value add slot slot variable position restore defer slot restorations set default
super set hyper k war gs get set hyper set hyper is instance callable is instance value error set hyper add slot add slot add slot super array ops identity get hyper apply state var device var d type update dic t ops convert to tensor array ops identity get hyper get fallback apply state get slot get slot get slot train ops resource apply center rms prop train ops resource apply rms prop math ops square state ops assign get slot state ops assign math ops square math ops sqr t state ops assign get fallback apply state get slot get slot get slot train ops resource sparse apply center rms prop train ops resource sparse apply rms prop state ops assign ops control dependencies resource scatter add array ops gather get slot state ops assign ops control dependencies resource scatter add array ops gather math ops square resource scatter add math ops sqr t control flow ops group control flow ops group len len np array super super config update serialize hyper parameter serialize hyper parameter serialize hyper parameter serialize hyper parameter
super set hyper k war gs get set hyper is instance callable is instance value error set hyper add slot super array ops identity get hyper get fallback apply state get slot train ops resource apply momentum train ops resource apply gradient descent super k war gs get fallback apply state resource variable ops resource scatter add get fallback apply state get slot train ops resource sparse apply momentum super config update serialize hyper parameter serialize hyper parameter serialize hyper parameter
de serialize object
is instance is instance t f optimizer k track optimizer is instance de serialize is instance str de serialize value error
serialize object
super ops name scope ops convert to tensor math ops cast math ops cast math ops cast math ops floor math ops multiply math ops pow
super ops name scope ops convert to tensor math ops cast math ops cast math ops cast math ops floor math ops cast constant op constant math ops add math ops multiply math ops divide
not implemented error not implemented error cls
super len len value error ops name scope ops convert n to tensor ops convert n to tensor ops convert to tensor enumerate math ops cast p red fn pair append p red fn pair append zip p red fn pair append control flow ops case
super ops name scope ops convert to tensor math ops cast math ops cast math ops cast math ops cast control flow ops cond math ops equal math ops ce il math ops multiply math ops minimum math ops divide math ops add math ops multiply math ops pow
generic utils de serialize object
generic utils serialize object
inspect get full arg spec super
inspect get full arg spec super

inspect get full arg spec super
import error np deg 2 rad np array np cos np sin np sin np cos np array np dot np deg 2 rad np array np sin np cos np dot np array np dot transform matrix offset center np roll axis nd image interpolation affine transform np stack np roll axis
import error array to img image enhance brightness img enhancer brightness enhance img to array
np roll axis np min np max np clip np stack np roll axis
len value error np random uniform apply brightness shift
np random uniform apply channel shift
np random uniform apply affine transform
np random uniform apply affine transform
np random uniform np random uniform apply affine transform
len value error np random uniform apply affine transform

np a range np log np minimum np sqr t
enumerate max min len range couple append label append label append int len random shuffle words i len words len random ran dint range random ran dint random seed random shuffle random seed random shuffle
warn warn k war gs pop type error str default dic t default dic t is instance is instance text to word sequence set list w counts sort sort voc extend dic t zip list range len list len set list texts to sequence generator word index get is instance is instance text to word sequence word index get vec t append vec t append vec t append list sequence to texts generator word index get index word get vec t append vec t append vec t append join texts to sequence sequence to matrix len value error value error np zero len enumerate default dic t list len np log np log index docs get value error json dump json dump json dump json dump json dump json dump
int md 5 text to word sequence hash function
hash trick
is instance ord unicode text translate len make trans len text translate text replace make trans text translate text split
json load token ize r config get json load config pop json load config pop json load config pop int json load config pop int json load config pop token ize r
k cast to float x k cast to float x k constant math ops reduce sum math ops abs math ops reduce sum math ops square float float
cls not implemented error str
is instance de serialize is instance str de serialize de serialize str callable value error
l 1 l 2
super get pool class data pool add close executor fn queue put executor apply a sync queue get last ones append queue get str runtime error six re raise
super get pool class data pool add time sleep list range len random shuffle close executor fn queue put executor apply a sync queue get six re raise
set has at tr value order append max s ys std out write s ys std out write s ys std out write int np log 10 str float int len s ys std out write is instance np mean max abs len s ys std out write int np log 10 str np mean max s ys std out write update
range len
multiprocessing value is instance get executor in it get pool class queue queue thread thread run thread join
custom object scope
is instance class and config for serialize object has at tr inspect get full arg spec cls from config dic t list list custom object scope cls from config custom object scope cls is instance custom object get module object get value error inspect is class inspect is function value error

os path join os path expand user os path expand user os access os path join os path join make dir s exist ok os path join os path join os path exist validate file prog bar progress tracker prog bar update url retrieve exception error msg format exception error msg format os path exist os remove os path exist extract archive extract archive
has at tr nest flatten get source input all source tensors append
import error py dot cluster dot set dot set dot set dot set dot set dot set node default py dot node str id dot add node is instance enumerate str id is instance is instance model to dot dot add sub graph format format is instance model to dot dot add sub graph format str str format shape has at tr format shape has at tr join format shape is instance py dot node dot add node str id enumerate str nest flatten str id dot get node dot get node add edge is instance be wrap model is instance be wrap model dot get node dot get node add edge is instance add edge be wrap model add edge add edge is instance is instance add edge add edge be wrap model add edge
np atleast 1 d np lina lg norm np expand dim
model to dot os path split ext dot write display image
inspect is class has at tr value error value error value error
decorator unwrap has at tr is instance serialize object is instance is instance get name or custom name serialize class and config has at tr get name or custom name value error
np array len tuple np max np zero categorical np a range n y np a range np reshape

get at tr value error metadata create summary metadata metadata encode value get at tr summary scope debug assert rank debug assert non negative fun c tools partial map fn cond shape constant tile shape transpose stack summary write
value error ops name scope ops device check create file writer arg s ops convert to tensor constant op constant constant op constant constant op constant constant op constant ops name from scope name resource summary writer fun c tools partial

is instance ops device gen summary ops flush summary writer
metadata create summary metadata get at tr summary scope bucket summary write is instance tpu outside compilation histogram summary
metadata create summary metadata get at tr summary scope debug assert rank debug assert non negative image convert image d type map fn cond shape constant shape stack as string as string c on cat summary write

metadata create summary metadata get at tr summary scope debug assert scalar summary write cast
metadata create summary metadata get at tr summary scope debug assert type summary write
log warn log warn value error value error run metadata graph run metadata profiler save

log warn log warn log warn trace context
ops name scope constant op constant value error has at tr ops device callable array ops identity gen summary ops write summary ops control dependencies constant op constant smart cond smart cond ops add to collection
data set ops data set v 1 adapter counter v 2
csv data set v 2 super
rag tensor ragged tensor spec
random data set v 2 super
sparse tensor sparse tensor spec
sql data set v 2 super
tensor array ops tensor array spec
tensor spec tensor spec
data set ops data set v 1 adapter choose from datasets
data set ops data set v 1 adapter make batch feature data set
data set ops data set v 1 adapter make csv data set
value error map and batch data set
data set ops data set v 1 adapter sample from datasets
super parameter server strategy parameter server strategy extended distribute lib distribution strategy gauge get cell
super collective all reduce extended distribute lib distribution strategy gauge get cell distribute lib distribution strategy replica gauge get cell distribute lib distribution strategy replica gauge get cell
super parameter server strategy extended distribute lib distribution strategy gauge get cell distribute lib distribution strategy replica gauge get cell len
super tpu extended distribute lib distribution strategy gauge get cell distribute lib distribution strategy replica gauge get cell distribute lib distribution strategy replica gauge get cell validate experimental run function autograph convert extend tpu run
is instance value error value error super model fn predict predict one key evaluate predict one key np sqr t get variable value
is instance value error format type dnn model dnn model
feature column lib be feature column feature column lib linear model linear model variables remove get expand variable list feature column linear model linear model cols to var s pop get expand variable list summary histogram summary scalar summary scalar compute fraction of zero
collections named tuple value error value error format tuple list list list is instance type error format type is instance value error format type is instance type error format type value error format is instance type error format type super

save lib save save utils trace model call save format export model json log warn
os path join as bytes as bytes as bytes file io read file to string model config model from json os path join as text as text as text model load weight


value error convert op hint to stub helper convert op hint to stub helper value error
super value error
super value error format value error format value error format value error
super
is instance type error join type value error format len value error format callable value error format in it ops truncate normal initializer math sqr t value error value error tpu embedding column v 2 tpu device specific embedding column v 2
is instance type error join type len len len value error format len len value error format len value error format callable value error in it ops truncate normal initializer math sqr t sort value error format join fc lib shared embedding column creator value error value error zip tpu shared embedding column v 2 tpu shared device specific embedding column v 2 tpu columns append
value error value error os path join estimator lib check hook type hook extend estimator convert e val step to hook train second or step timer estimator evaluate build graph value error value error ops get collection array ops placeholder ops get collection ops get collection value error ops get collection set set control flow ops group state ops assign evaluate train session run session run train scaffold estimator evaluate run timer update last trigger step timer should trigger for step evaluate evaluate
array ops ones array ops shape array ops reshape math ops cast array ops reshape math ops greater equal array ops boolean mask array ops boolean mask array ops boolean mask math ops reduce max array ops unique math ops un sorted segment min array ops shape array ops reshape math ops un sorted segment sum array ops shape s dc a ops sparse feature column array ops shape feature column lib feature transformation cache sort is instance column get sparse tensors sparse feature with value append prune and unique sparse ids sparse feature with value weight append state manager get variable is instance value error type dense feature append column get dense tensor dense feature weight append state manager get variable value error type dense feature append array ops ones dense feature weight append array ops reshape array ops ones dic t math ops to float array ops reshape dic t s dc a ops s dc a model dic t s dc a model minimize
binary head lib binary class head multi head lib multi class head log info seq head lib sequential head wrapper super
is instance value error verify rnn cell input make rnn layer rnn model get rnn estimator spec super
set set value error format is instance placeholder from tensor placeholder s from receiver tensors dic t is instance placeholder from tensor placeholder s from receiver tensors dic t dic t receiver tensors update supervised input receiver
function utils fn arg s log it fn is instance all is instance is instance six it er items is instance value error
is instance type error format type value error stop on predicate hook
train stop at step hook stop at checkpoint step hook
stop if threshold cross hook
stop if threshold cross hook
stop if no metric improvement hook
stop if no metric improvement hook
activation s get initializer s get initializer s get regularize rs get regularize rs get super base layer model gauge get cell is instance core dense dense layer append core dense dense layer append add weight is instance len len value error format len len zip layer nn bias add activation activation s serialize initializer s serialize initializer s serialize regularize rs serialize regularize rs serialize base layer layer get config dic t list list cls
super is instance value error fc feature transformation cache ops name scope column get sequence dense tensor output tensors append process dense tensor sequence lengths append fc verify static batch size equality assert all equal and return verify and c on cat tensors
super base layer model gauge get cell activation s get is instance len linear model dnn model nest map structure nest map structure is instance tape gradient linear optimizer apply gradients zip dnn optimizer apply gradients zip get at tr set trainable state is instance k name scope linear optimizer get update dnn optimizer get update get update for get update for has at tr k name scope k function set at tr set trainable state generic utils serialize object generic utils serialize object activation s serialize base layer layer get config dic t list list config pop layer module de serialize config pop layer module de serialize activation s de serialize config pop cls