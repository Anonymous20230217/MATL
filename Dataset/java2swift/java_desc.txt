construct an empty array
append the specify element to the end of this list
insert the specify element at the specify position in this list
remove all of the elements from this list
returns true if this list contain the specify element
perform the give action for each element of the iterable until all elements have be process or the action throw an exception
return the element at the specify position in this list
return the index of the first occurrence of the specify element in this list
return the index of the last occurrence of the specify element in this list
returns true if this list contain no elements
remove the element at the specify position in this list
return the number of elements in this list
return a list iterator over the elements in this list in proper sequence
remove from this list all of the elements whose index be between fromindex inclusive and toindex exclusive
sort this list accord to the order induce by the specified comparator
return the hash code value for this list
replace the element at the specify position in this list with the specify element
append the specify element to the end of this list
insert the specify element at the specify position in this list
remove all of the elements from this list
returns true if this list contain the specify element
return the element at the specify position in this list
return the index of the first occurrence of the specify element in this list
return the index of the last occurrence of the specify element in this list
remove the element at the specify position in this list
return a list iterator over the elements in this list in proper sequence
replace the element at the specify position in this list with the specify element
retrieve and remove the head first element of this list
remove and return the first element from this list
remove and return the last element from this list
return the number of elements in this list
retrieve but do not remove the head first element of this list
return the hash code value for this list
return the first element in this list
return the last element in this list
retrieve but do not remove the first element of this list
retrieve but do not remove the last element of this list
remove and return the first element of this list in other word pop an element from the stack represent by this list
append all of the elements in the specify collection to the end of this list in the order that they be return by the specify collection's iterator
insert the specify element at the end of this list
construct a new empty set
add the specify element to this set if it be not already present
remove all of the elements from this set
returns true if this set contain the specify element
returns true if this set contain no elements
return an iterator over the elements in this set
remove the specify element from this set if it be present
return the number of elements in this set its cardinality
remove all of the mappings from this map
returns true if this map contain a map for the specify key
returns true if this map map one or more key to the specify value
perform the give action for each entry in this map until all entries have be process or the action throw an exception
return the value to which the specify key be map
return the value to which the specify key be map or defaultvalue if this map contain no map for the key
return a set view of the key contain in this map
return a collection view of the value contain in this map
if the specify key be not already associate with a value or be associate with null associate it with the give non null value
associate the specify value with the specify key in this map
remove the map for the specify key from this map if present
return the number of key value mappings in this map
compare the time value millisecond offset from the epoch represent by two calendar objects
value of the am pm field indicate the period of the day from midnight to just before noon
value of the am pm field indicate the period of the day from noon to just before midnight
return the maximum value for the give calendar field of this calendar instance
return the minimum value for the give calendar field of this calendar instance
return the value of the give calendar field
return a date object represent this calendar's time value
get the time zone
getfirstdayofweek get what the first day of the week be
get what the minimal days require in the first week of the year be
set this calendar's time with the given date
set the time zone with the give time zone value
return a hash code for this calendar
return an array of all locales for which the getinstance methods of this class can return localize instance
compare this calendar to the specified object
get a calendar use the users' default time zone and locale
return a string representation of this calendar
set the give calendar field to the give value
return this calendar's time value in milliseconds
return the string representation of the calendar field value in the given style and locale
return the calendar type of this calendar
return the number of weeks in the week year represent by this calendar
return an empty set
return an empty list
return an empty map
return an enumeration over the specify collection
replace all of the elements of the specify list with the specify element
return the maximum element of the give collection
return the minimum element of the give collection
sort the specify list into ascend order
randomly permute the specify list use a default source of randomness
swap the elements at the specify position in the specify list
reverse the order of the elements in the specify list
return the start position of the first occurrence of the specify target list within the specify source list
return the start position of the last occurrence of the specify target list within the specify source list
search the specify list for the specify object use the binary search algorithm
add all of the specify elements to the specify collection
sort the specify array of object into ascend order
return a string representation of the content of the specify array
set all elements of the specify array use the provide generator function to compute each element
assign the specify int value to each element of the specify array of ints
returns true if the two specify array of ints are equal to one another
search the specify array of ints for the specify value use the binary search algorithm
returns true if the two specify array are deeply equal to one another
return the char value at the specify index
compare two string lexicographically
concatenate the specify string to the end of this string
return true if and only if this string contain the specify sequence of char value
compare this string to the specified charsequence
test if this string start with the specify prefix
test if this string end with the specify suffix
compare this string to the specify object
return a format string use the specify format string and arguments
return a string that be a substring of this string
return a character sequence that be a subsequence of this sequence
return the index within this string of the first occurrence of the specify character
returns true if and only if  length  is 0
return a new string compose of copy of the charsequence elements joined together with a copy of the specified delimiter
return the index within this string of the last occurrence of the specify character
return the length of this string
tell whether or not this string match the given regular expression
return a string result from replace all occurrences of oldchar in this string with newchar
split this string around match of the given regular expression
convert all of the character in this string to lower case
convert all of the character in this string to upper case
return a string whose value be this string with any lead and trail whitespace remove
return the string representation of the object argument
hashcode
equivalent to valueof char
compare two string lexicographically ignore case differences
encode this string into a sequence of bytes use the platform's default charset store the result into a new byte array
tell whether or not this string match the given regular expression
copy character from this string into the destination character array
return the string representation of the boolean argument
return the string representation of the int argument
return the string representation of the float argument
return the string representation of the char argument
return the string representation of a specific subarray of the char array argument
return the string representation of the char array argument
return a string that be a substring of this string
return a format string use the specify format string and arguments
return a format string use the specify locale format string and arguments
return the index within this string of the last occurrence of the specify substring
replace each substring of this string that match the literal target sequence with the specify literal replacement sequence
split this string around match of the given regular expression
construct a newly allocated integer object that represent the specified int value
return the number of one bits in the two's complement binary representation of the specified int value
decode a string into an integer
return the unsigned quotient of divide the first argument by the second where each argument and the result be interpret as an unsigned value
return the value of this integer as a double after a widen primitive conversion
return a hash code for this integer
return the greater of two int values as if by calling math max
return the smaller of two int values as if by calling math min
return the number of zero bits precede the highest order "leftmost" one bite in the two's complement binary representation of the specified int value
return the number of zero bits follow the lowest order "rightmost" one bite in the two's complement binary representation of the specified int value
parse the string argument as a sign decimal integer
return the unsigned remainder from divide the first argument by the second
return the value obtain by reverse the order of the bytes in the two's complement binary representation of the specified int value
add two integers together as per the operator
return an integer object hold the value of the specified string
return a string object represent this integer's value
a constant hold the minimum value an int can have
a constant hold the maximum value an int can have
the return value be 1 if the specify value be negative 0 if the specify value be zero and 1 if the specify value be positive
return the value of this integer as a float after a widen primitive conversion
parse the string argument as a sign integer in the radix specify
return a string object represent the specify integer
return a string representation of the first argument in the radix specify
return a string representation of the integer argument as an unsigned integer in base 2
return a string representation of the integer argument as an unsigned integer in base 8
return a string representation of the integer argument as an unsigned integer in base 16
construct a newly allocated integer object that represent the int value indicate by the string parameter
return a hash code for a int value
construct a new throwable with null as its detail message
provide programmatic access to the stack trace information print by printstacktrace
print this throwable and its backtrace to the standard error stream
return the cause of this throwable or null if the cause be nonexistent or unknown
return the detail message string of this throwable
allocate a new thread object
cause this thread to begin execution
if this thread be construct use a separate runnable run object then that runnable object's run method be call
cause the currently execute thread to sleep temporarily cease execution for the specify number of milliseconds
interrupt this thread
test whether this thread have be interrupt
return this thread's priority
change the priority of this thread
return a reference to the currently execute thread object
return an array of stack trace elements represent the stack dump of this thread
return this thread's name
return the class representing the superclass of the entity class interface primitive type or void represent by this class
return the name of the entity class  interface array class primitive type or void
return a string describe this class include information about modifiers and type parameters
return an array contain method object reflect all the public methods of the class or interface represent by this class object
determine if the specified class object represent a primitive type
determine the interfaces implement by the class or interface represent by this object
return an array containing field objects reflect all the accessible public field of the class or interface represent by this class object
return a method object that reflect the specify public member method of the class or interface represent by this class object
return an array of field objects reflect all the field declare by the class or interface represent by this class object
returns true if and only if the underlie class be a member class
return the class object associate with the class or interface with the give string name
test whether the application can execute the file denote by this abstract pathname
test whether the application can read the file denote by this abstract pathname
test whether the application can modify the file denote by this abstract pathname
compare two abstract pathnames lexicographically
test this abstract pathname for equality with the give object
atomically create a new empty file name by this abstract pathname if and only if a file with this name do not yet exist
delete the file or directory denote by this abstract pathname
test whether the file or directory denote by this abstract pathname exist
return the name of the file or directory denote by this abstract pathname
convert this abstract pathname into a pathname string
test whether the file denote by this abstract pathname be a directory
test whether the file denote by this abstract pathname be a normal file
return the absolute pathname string of this abstract pathname
return the pathname string of this abstract pathname's parent or null if this pathname do not name a parent directory
create the directory name by this abstract pathname
return the pathname string of this abstract pathname
construct a file: uri that represent this abstract pathname
return an array of string name the file and directories in the directory denote by this abstract pathname
return an array of abstract pathnames denote the file in the directory denote by this abstract pathname
return the number of unallocated bytes in the partition named by this abstract path name
return the size of the partition named by this abstract pathname
return the number of bytes available to this virtual machine on the partition named by this abstract pathname
return the time that the file denote by this abstract pathname be last modify
return the length of the file denote by this abstract pathname
rename the file denote by this abstract pathname
return the abstract pathname of this abstract pathname's parent or null if this pathname do not name a parent directory
create an empty file in the default temporary file directory
create a new empty file in the specify directory
compute a hash code for this abstract pathname
write the specify byte to this stream
writes len bytes from the specify byte array start at offset off to this stream
terminate the current line by write the line separator string
print a boolean and then terminate the line
print a character and then terminate the line
print an array of character and then terminate the line
print a double and then terminate the line
print a float and then terminate the line
print an integer and then terminate the line
print an object and then terminate the line
print a string and then terminate the line
print a long and then terminate the line
append the specify character to this output stream
append the specify character sequence to this output stream
append a subsequence of the specify character sequence to this output stream
set the error state of the stream to true
clear the internal error state of this stream
flush the stream and check its error state
print a string
print an object
print an integer
close the stream
create a new print stream without automatic line flush with the specify file
read some number of bytes from the input stream and store them into the buffer array b
return an estimate of the number of bytes that can be read
close this input stream and release any system resources associate with the stream
